
// Drawing Object
var canvas = {
	vars: {
		initialized: false,	//Has canvas been initialized yet?
		c: false,			//The actual canvas element
		ctx: false,			//The canvas context
		scale: cLoadInt('scale',5),			//Scale of drawing
		photoCache: {},		//Already loaded photos
		terrainAliases: {
			/*"dunes":"desertHills",
			"canyon":"extremeHills",
			"deciduous forest": "deciduous-forest",
			"deciduous": "jungle",
			"coniferous forest": "forest",
			"coniferous": "forest",
			"brushland":"plains",
			"jade cliffs":"extremeHills",
			"chaparral":"plains",
			"maple":"forest",
			"temperate rainforest":"forest",
			"sludgepit":"swamp",
			"bog":"swamp",
			"rainforest":"jungle",
			"tropical":"jungle",
			"mountain":"extremeHills",
			"temperate":"forest",
			"jungleedge":"jungle",
			"jade hills":"extremeHills",
			"roofed":"roofed forest",
			"grassland":"swamp",
			"deep":"ocean",
			"meadow":"plains",
			"birch":"birch forest",
			"heathland":"plains",
			"dead":"quagmire",
			"prairie":"plains",
			"wetland":"swamp",
			"junglehills":"jungleM",
			"redwood forest":"jungle",
			"moor":"swamp",*/
			"roofed":"roofed forest",
			"junglehills":"jungleM",
			"birch":"birch forest",
			'deciduous':'deciduous-forest',
			'deciduous forest':'deciduous-forest',
			'cherry blossom grove':'cherry-blossom-grove',
			'lavender fields':'lavender-fields',
			'lavender':'lavender-fields',
			'tundra':'icePlains',
			'ominous forest': 'ominous-forest',
			'maple woods':'maple-woods',
			'dead forest':'dead-forest',
			'dead swamp':'dead-swamp',
			'temperate rainforest':'temperate-rainforest',
			'boreal forest':'boreal-forest',
			'redwood forest':'redwood-forest',
			'chapparal':'chapparal-forest',
			'mystic grove':'mystic-grove',
			'spruce forest':'spruce-forest',
			'lush desert':'lush-desert'
			
		},
		terrainTexture: {
			"bayou": [['#3f761e', '#97a87a', '#97a87a', '#60511d', '#305e8a', '#305e8a', '#3f761e', '#336615'],
['#3f761e', '#336615', '#336615', '#336615', '#8da06b', '#8da06b', '#3f761e', '#60511d'],
['#8b9f68', '#3f761e', '#336615', '#3f761e', '#92a473', '#8b9f68', '#92a473', '#60511d'],
['#92a470', '#3f761e', '#60511d', '#3f761e', '#96a778', '#336615', '#336615', '#336615'],
['#305e8a', '#93a475', '#60511d', '#92a470', '#8ea16c', '#3f761e', '#336615', '#3f761e'],
['#305e8a', '#305e8a', '#336615', '#336615', '#336615', '#3f761e', '#60511d', '#3f761e'],
['#93a475', '#93a475', '#3f761e', '#336615', '#3f761e', '#879b62', '#60511d', '#305e8a'],
['#336615', '#8da06b', '#3f761e', '#60511d', '#3f761e', '#305e8a', '#336615', '#336615']],
"beach": [['#fff087', '#fef18f', '#fef18f', '#006fdd', '#006cd4', '#ffef81', '#ffef7a', '#ffed77'],
['#ffef8a', '#fff080', '#fff084', '#feee85', '#fff07d', '#fff07d', '#fff07d', '#fff087'],
['#ffef7a', '#fff07d', '#fff087', '#ffef8a', '#fff087', '#0067ca', '#006cd7', '#fff087'],
['#feee85', '#fff294', '#fff087', '#ffef8a', '#fff28e', '#0069d1', '#006cd7', '#fff080'],
['#fef18f', '#006fda', '#006ad3', '#006cd4', '#fff080', '#fff087', '#fff28e', '#feee85'],
['#fff294', '#006ddc', '#fff28e', '#fff087', '#fff087', '#feee85', '#feee85', '#ffef8a'],
['#ffef8a', '#ffef8a', '#fff087', '#fff080', '#fff07d', '#0062c3', '#0069d1', '#0072e3'],
['#fff07d', '#fff07d', '#fff07d', '#feee85', '#fff087', '#006fdd', '#0070df', '#006cd7']],
"birch forest": [['#5b9b53', '#a1c09d', '#a1c09d', '#9ebe9a', '#97ba93', '#94b890', '#509948', '#529a47'],
['#9bbc97', '#569c4b', '#589b50', '#599c51', '#92b68d', '#92b68d', '#92b68d', '#ffffff'],
['#8eb389', '#549a4c', '#5b9b53', '#5e9c56', '#99bb95', '#8eb389', '#99bb95', '#99bb95'],
['#97ba93', '#a4c2a0', '#ffffff', '#9bbc97', '#9fbf9b', '#569c4b', '#5b9b53', '#569c4b'],
['#a1c09d', '#9bbc97', '#94b890', '#97ba93', '#93b78e', '#5b9b53', '#609e58', '#599c51'],
['#a4c2a0', '#9cbd98', '#609e58', '#5b9b53', '#5b9b53', '#97ba93', '#ffffff', '#9bbc97'],
['#9bbc97', '#9bbc97', '#5b9b53', '#569c4b', '#549a4c', '#88af83', '#93b78e', '#a4c2a0'],
['#549a4c', '#92b68d', '#92b68d', '#ffffff', '#99bb95', '#9ebe9a', '#639e5b', '#5b9b53']],
"birch forest hills": [['#5b9b53', '#a1c09d', '#a1c09d', '#9d9d9d', '#989898', '#94b890', '#509948', '#529a47'],
['#9bbc97', '#569c4b', '#589b50', '#599c51', '#92b68d', '#92b68d', '#92b68d', '#ffffff'],
['#8eb389', '#549a4c', '#5b9b53', '#5e9c56', '#99bb95', '#909090', '#999999', '#99bb95'],
['#97ba93', '#a4c2a0', '#ffffff', '#9bbc97', '#9fbf9b', '#569c4b', '#5b9b53', '#569c4b'],
['#a1c09d', '#9b9b9b', '#969696', '#989898', '#93b78e', '#5b9b53', '#609e58', '#599c51'],
['#a4c2a0', '#9c9c9c', '#609e58', '#5b9b53', '#5b9b53', '#97ba93', '#ffffff', '#9bbc97'],
['#9bbc97', '#9bbc97', '#5b9b53', '#569c4b', '#549a4c', '#8c8c8c', '#949494', '#a1a1a1'],
['#549a4c', '#92b68d', '#92b68d', '#ffffff', '#99bb95', '#9d9d9d', '#639e5b', '#5b9b53']],
"birch forest m": [['#5b9b53', '#a1c09d', '#a1c09d', '#ffffff', '#97ba93', '#94b890', '#509948', '#529a47'],
['#9bbc97', '#569c4b', '#589b50', '#599c51', '#92b68d', '#92b68d', '#92b68d', '#ffffff'],
['#8eb389', '#549a4c', '#5b9b53', '#5e9c56', '#99bb95', '#8eb389', '#99bb95', '#ffffff'],
['#97ba93', '#a4c2a0', '#ffffff', '#9bbc97', '#9fbf9b', '#569c4b', '#5b9b53', '#569c4b'],
['#a1c09d', '#9bbc97', '#ffffff', '#97ba93', '#93b78e', '#5b9b53', '#609e58', '#599c51'],
['#a4c2a0', '#9cbd98', '#609e58', '#5b9b53', '#5b9b53', '#97ba93', '#ffffff', '#9bbc97'],
['#9bbc97', '#9bbc97', '#5b9b53', '#569c4b', '#549a4c', '#88af83', '#ffffff', '#a4c2a0'],
['#549a4c', '#92b68d', '#92b68d', '#ffffff', '#99bb95', '#9ebe9a', '#639e5b', '#5b9b53']],
"bog": [['#7a5735', '#7b5936', '#795236', '#7f5439', '#7d543b', '#99a155', '#7a4e38', '#7e5733'],
['#7a5239', '#99a155', '#7b5237', '#7e5733', '#7d4f39', '#4f3018', '#775537', '#805033'],
['#825138', '#99a155', '#80563b', '#4957d0', '#4957d0', '#795237', '#4957d0', '#7e533a'],
['#7c5134', '#99a155', '#7f573a', '#4957d0', '#4957d0', '#7c593b', '#7f5235', '#7f5738'],
['#4957d0', '#99a155', '#79573b', '#7b5439', '#4957d0', '#4957d0', '#7e5436', '#4957d0'],
['#7e5532', '#99a155', '#7c5535', '#7b5535', '#7a5439', '#99a155', '#4957d0', '#4957d0'],
['#795539', '#4f3018', '#825835', '#825538', '#7d563b', '#99a155', '#4957d0', '#785136'],
['#7a5337', '#7c5235', '#7e5135', '#7c5639', '#4957d0', '#99a155', '#80572f', '#81523a']],
"boreal-forest": [['#4b5634', '#4d5836', '#4a5533', '#d3c9c0', '#515c3a', '#515c3a', '#482f16', '#535e3c'],
['#4c5735', '#4f5a38', '#4d5836', '#594513', '#594513', '#594513', '#46512f', '#55603e'],
['#5a6543', '#294529', '#56613f', '#594513', '#594513', '#594513', '#4f5a38', '#525d3b'],
['#294529', '#294529', '#294529', '#4b5634', '#d3c9c0', '#4f5a38', '#294529', '#545f3d'],
['#294529', '#294529', '#294529', '#4e5937', '#4f5a38', '#525d3b', '#294529', '#545f3d'],
['#535e3c', '#482f16', '#4f5a38', '#4e5937', '#4c5735', '#294529', '#294529', '#294529'],
['#4a5533', '#482f16', '#594513', '#594513', '#594513', '#294529', '#294529', '#294529'],
['#4c5735', '#4e5937', '#594513', '#594513', '#594513', '#56613f', '#482f16', '#576240']],
"brushland": [['#acb29d', '#adb39f', '#adb39f', '#adb39f', '#b49057', '#a7ad97', '#a2a992', '#a2a992'],
['#adb39f', '#a7ad97', '#abb19c', '#abb19c', '#b49057', '#a6ac96', '#a6ac96', '#acb29d'],
['#a2a992', '#a6ac96', '#acb29d', '#adb39f', '#acb29d', '#a2a992', '#acb29d', '#acb29d'],
['#abb19c', '#619866', '#acb29d', '#adb39f', '#adb39f', '#a7ad97', '#acb29d', '#a7ad97'],
['#619866', '#619866', '#619866', '#abb19c', '#a7ad97', '#acb29d', '#adb39f', '#abb19c'],
['#adb39f', '#b49057', '#adb39f', '#acb29d', '#acb29d', '#abb19c', '#abb19c', '#adb39f'],
['#adb39f', '#b49057', '#acb29d', '#a7ad97', '#619866', '#a2a992', '#a7ad97', '#adb39f'],
['#a6ac96', '#a6ac96', '#a6ac96', '#619866', '#619866', '#619866', '#adb39f', '#acb29d']],
"chaparral": [['#1e7e00', '#a1c09d', '#b0c5ad', '#cbcccb', '#c8c9c8', '#c5c7c4', '#a2b99f', '#8db388'],
['#1e7e00', '#1e7e00', '#96b992', '#97ba93', '#92b68d', '#96b792', '#92b68d', '#1e7e00'],
['#c2c4c2', '#afbfad', '#a3bea0', '#b3c4b1', '#9fbd9b', '#8eb389', '#a1bd9e', '#b7c5b6'],
['#bcc5bc', '#cfd0cf', '#c9cac9', '#1e7e00', '#b1c5af', '#93b78e', '#a0bd9d', '#aabea7'],
['#a2c09e', '#b2c3b0', '#1e7e00', '#1e7e00', '#1e7e00', '#99bb95', '#aec3ab', '#bac5b9'],
['#a4c2a0', '#9cbd98', '#a1bf9d', '#a7bfa4', '#99bb95', '#afc1ad', '#c7c9c7', '#b3c4b1'],
['#9bbc97', '#9cbc98', '#acc1a9', '#b0c0ae', '#1e7e00', '#c0c1c0', '#c5c7c5', '#a8c3a4'],
['#92b68d', '#92b68d', '#92b68d', '#1e7e00', '#1e7e00', '#1e7e00', '#a8c2a5', '#99bb95']],
"cherry-blossom-grove": [['#f29fe7', '#a1c09d', '#a1c09d', '#a1c09d', '#97ba93', '#92b68d', '#f29fe7', '#f29fe7'],
['#9bbc97', '#e2cbe9', '#e2cbe9', '#e2cbe9', '#92b68d', '#92b68d', '#92b68d', '#996600'],
['#92b68d', '#e2cbe9', '#e2cbe9', '#e2cbe9', '#99bb95', '#92b68d', '#99bb95', '#99bb95'],
['#97ba93', '#a1c09d', '#996600', '#9bbc97', '#a1c09d', '#e2cbe9', '#e2cbe9', '#e2cbe9'],
['#a1c09d', '#9bbc97', '#92b68d', '#97ba93', '#92b68d', '#e2cbe9', '#e2cbe9', '#e2cbe9'],
['#a1c09d', '#9bbc97', '#f29fe7', '#f29fe7', '#f29fe7', '#97ba93', '#996600', '#9bbc97'],
['#9bbc97', '#9bbc97', '#f29fe7', '#f29fe7', '#f29fe7', '#92b68d', '#92b68d', '#a1c09d'],
['#f29fe7', '#92b68d', '#92b68d', '#996600', '#99bb95', '#a1c09d', '#f29fe7', '#f29fe7']],
"cold beach": [['#ececec', '#f3f3f3', '#eeeeee', '#006fdd', '#006cd4', '#e3e3e3', '#bababa', '#336600'],
['#eeeeee', '#d1d1d1', '#dcdcdc', '#fbfbfb', '#e3e3e3', '#dddddd', '#c1c1c1', '#336600'],
['#d5d5d5', '#dddddd', '#336600', '#fafafa', '#f1f1f1', '#0067ca', '#006cd7', '#ececec'],
['#e6e6e6', '#fefefe', '#336600', '#ececec', '#ededed', '#0069d1', '#006cd7', '#dcdcdc'],
['#f3f3f3', '#006fda', '#006ad3', '#006cd4', '#fafafa', '#dfdfdf', '#336600', '#dcdcdc'],
['#f5f5f5', '#006ddc', '#dcdcdc', '#dddddd', '#eaeaea', '#e3e3e3', '#336600', '#eaeaea'],
['#ececec', '#e4e4e4', '#f9f9f9', '#336600', '#dcdcdc', '#0062c3', '#0069d1', '#0072e3'],
['#ececec', '#dbdbdb', '#dfdfdf', '#336600', '#efefef', '#006fdd', '#0070df', '#006cd7']],
"cold taiga hills": [['#336600', '#f3f3f3', '#336600', '#9d9d9d', '#989898', '#e3e3e3', '#336600', '#336600'],
['#eeeeee', '#336600', '#336600', '#336600', '#e3e3e3', '#dddddd', '#c1c1c1', '#663300'],
['#d5d5d5', '#336600', '#336600', '#336600', '#f1f1f1', '#909090', '#336600', '#ececec'],
['#e6e6e6', '#fefefe', '#663300', '#ececec', '#ededed', '#336600', '#336600', '#336600'],
['#f3f3f3', '#9b9b9b', '#969696', '#336600', '#fafafa', '#336600', '#336600', '#336600'],
['#f5f5f5', '#9c9c9c', '#336600', '#336600', '#336600', '#e3e3e3', '#663300', '#eaeaea'],
['#ececec', '#e4e4e4', '#336600', '#336600', '#336600', '#8c8c8c', '#949494', '#336600'],
['#336600', '#336600', '#dfdfdf', '#663300', '#efefef', '#9d9d9d', '#336600', '#336600']],
"cold taiga m": [['#336600', '#f3f3f3', '#336600', '#bd8249', '#b97d43', '#e3e3e3', '#336600', '#336600'],
['#eeeeee', '#336600', '#336600', '#336600', '#e3e3e3', '#dddddd', '#c1c1c1', '#663300'],
['#d5d5d5', '#336600', '#336600', '#336600', '#f1f1f1', '#b07740', '#336600', '#ececec'],
['#e6e6e6', '#fefefe', '#663300', '#ececec', '#ededed', '#336600', '#336600', '#336600'],
['#f3f3f3', '#bc8046', '#b87d43', '#336600', '#fafafa', '#336600', '#336600', '#336600'],
['#f5f5f5', '#bd8248', '#336600', '#336600', '#336600', '#e3e3e3', '#663300', '#eaeaea'],
['#ececec', '#e4e4e4', '#336600', '#336600', '#336600', '#aa733e', '#b57b42', '#336600'],
['#336600', '#336600', '#dfdfdf', '#663300', '#efefef', '#bd8249', '#336600', '#336600']],
"dead-forest": [['#aab19f', '#535940', '#b0b7a6', '#adb4a3', '#a8b09d', '#a5ad9a', '#535940', '#a0a893'],
['#abb2a0', '#a4ac98', '#a7af9c', '#a8b09d', '#a3ab97', '#a3ab97', '#5f654e', '#aab19f'],
['#a0a894', '#5f654e', '#aab19f', '#5f654e', '#aab19f', '#a0a894', '#aab19f', '#aab19f'],
['#a8b09d', '#b3b9a9', '#535940', '#abb2a0', '#aeb5a4', '#a4ac98', '#aab19f', '#5f654e'],
['#b0b7a6', '#abb2a0', '#5f654e', '#535940', '#a4ac98', '#aab19f', '#adb4a3', '#5f654e'],
['#b3b9a9', '#acb3a1', '#5f654e', '#aab19f', '#aab19f', '#a8b09d', '#a8b09d', '#abb2a0'],
['#abb2a0', '#abb2a0', '#aab19f', '#a4ac98', '#a3ab97', '#5f654e', '#a4ac98', '#5f654e'],
['#a3ab97', '#535940', '#a3ab97', '#a8b09d', '#a3ab97', '#adb4a3', '#535940', '#aab19f']],
"dead-swamp": [['#aab19f', '#535940', '#b0b7a6', '#adb4a3', '#4b5f6f', '#a5ad9a', '#535940', '#a0a893'],
['#4b5f6f', '#a4ac98', '#a7af9c', '#a8b09d', '#a3ab97', '#a3ab97', '#5f654e', '#4b5f6f'],
['#a0a894', '#5f654e', '#aab19f', '#5f654e', '#aab19f', '#a0a894', '#aab19f', '#aab19f'],
['#a8b09d', '#b3b9a9', '#535940', '#abb2a0', '#aeb5a4', '#a4ac98', '#4b5f6f', '#5f654e'],
['#b0b7a6', '#abb2a0', '#5f654e', '#535940', '#a4ac98', '#4b5f6f', '#4b5f6f', '#5f654e'],
['#b3b9a9', '#acb3a1', '#5f654e', '#aab19f', '#aab19f', '#a8b09d', '#a8b09d', '#4b5f6f'],
['#4b5f6f', '#4b5f6f', '#aab19f', '#a4ac98', '#a3ab97', '#5f654e', '#a4ac98', '#5f654e'],
['#a3ab97', '#535940', '#a3ab97', '#4b5f6f', '#4b5f6f', '#adb4a3', '#535940', '#aab19f']],
"deciduous-forest": [['#4c5b2e', '#a3ac77', '#a3ac77', '#5d762d', '#9fa86c', '#9ca567', '#5d762d', '#99a363'],
['#4c5b2e', '#4c5b2e', '#5d762d', '#5d762d', '#5d762d', '#9ca567', '#8d680e', '#4c5b2e'],
['#99a363', '#5d762d', '#9ea86f', '#5d762d', '#9ea86f', '#99a363', '#8d680e', '#9ea86f'],
['#5d762d', '#5d762d', '#5d762d', '#8d680e', '#a3ac77', '#9ca567', '#8d680e', '#4c5b2e'],
['#4c5b2e', '#5d762d', '#9ca567', '#8d680e', '#9ca567', '#9ea86f', '#4c5b2e', '#4c5b2e'],
['#a3ac77', '#8d680e', '#a3ac77', '#8d680e', '#4c5b2e', '#9fa86c', '#9fa86c', '#9ea86f'],
['#9ea86f', '#8d680e', '#9ea86f', '#4c5b2e', '#4c5b2e', '#4c5b2e', '#5d762d', '#a3ac77'],
['#9ca567', '#8d680e', '#9ca567', '#9fa86c', '#9ea86f', '#5d762d', '#5d762d', '#5d762d']],
"deep ocean": [['#4054a2', '#475aa2', '#475aa2', '#4559a2', '#3e52a2', '#3b50a2', '#344aa1', '#3249a1'],
['#4155a2', '#384ea1', '#3c51a2', '#3e52a2', '#374da1', '#374da1', '#374da1', '#4054a2'],
['#344aa1', '#374da1', '#4054a2', '#4155a2', '#4054a2', '#344aa1', '#4054a2', '#4054a2'],
['#3e52a2', '#4b5da3', '#4054a2', '#4155a2', '#4659a2', '#384ea1', '#4054a2', '#384ea1'],
['#475aa2', '#4155a2', '#3b50a2', '#3e52a2', '#384ea1', '#4054a2', '#4559a2', '#3e52a2'],
['#4b5da3', '#4257a2', '#4559a2', '#4054a2', '#4054a2', '#3e52a2', '#3e52a2', '#4155a2'],
['#4155a2', '#4155a2', '#4054a2', '#384ea1', '#374da1', '#2e46a0', '#384ea1', '#4b5da3'],
['#374da1', '#374da1', '#374da1', '#3e52a2', '#4054a2', '#4559a2', '#475aa2', '#4054a2']],
"desert": [['#fff087', '#fef18f', '#fef18f', '#fff28e', '#feee85', '#ffef81', '#ffef7a', '#336600'],
['#ffef8a', '#fff080', '#fff084', '#feee85', '#fff07d', '#fff07d', '#fff07d', '#336600'],
['#ffef7a', '#fff07d', '#336600', '#ffef8a', '#fff087', '#ffef7a', '#fff087', '#fff087'],
['#feee85', '#fff294', '#336600', '#ffef8a', '#fff28e', '#fff080', '#fff087', '#fff080'],
['#fef18f', '#ffef8a', '#ffef81', '#feee85', '#fff080', '#fff087', '#336600', '#feee85'],
['#fff294', '#ffef8a', '#fff28e', '#fff087', '#fff087', '#feee85', '#336600', '#ffef8a'],
['#ffef8a', '#ffef8a', '#fff087', '#336600', '#fff07d', '#ffed73', '#fff080', '#fff294'],
['#fff07d', '#fff07d', '#fff07d', '#336600', '#fff087', '#fff28e', '#fef18f', '#fff087']],
"desertHills": [['#fff087', '#fef18f', '#fef18f', '#9d9d9d', '#989898', '#ffef81', '#ffef7a', '#ffed77'],
['#ffef8a', '#fff080', '#fff084', '#feee85', '#fff07d', '#fff07d', '#fff07d', '#fff087'],
['#ffef7a', '#fff07d', '#fff087', '#ffef8a', '#fff087', '#909090', '#999999', '#fff087'],
['#feee85', '#fff294', '#fff087', '#ffef8a', '#fff28e', '#949494', '#999999', '#fff080'],
['#fef18f', '#9b9b9b', '#969696', '#989898', '#fff080', '#fff087', '#fff28e', '#feee85'],
['#fff294', '#9c9c9c', '#fff28e', '#fff087', '#fff087', '#feee85', '#feee85', '#ffef8a'],
['#ffef8a', '#ffef8a', '#fff087', '#fff080', '#fff07d', '#8c8c8c', '#949494', '#a1a1a1'],
['#fff07d', '#fff07d', '#fff07d', '#feee85', '#fff087', '#9d9d9d', '#9f9f9f', '#999999']],
"desertM": [['#fff087', '#fef18f', '#fef18f', '#bd8249', '#b97d43', '#ffef81', '#ffef7a', '#ffed77'],
['#ffef8a', '#fff080', '#fff084', '#feee85', '#fff07d', '#fff07d', '#fff07d', '#fff087'],
['#ffef7a', '#fff07d', '#fff087', '#ffef8a', '#fff087', '#b07740', '#bb7f44', '#fff087'],
['#feee85', '#fff294', '#fff087', '#ffef8a', '#fff28e', '#b57b42', '#bb7f44', '#fff080'],
['#fef18f', '#bc8046', '#b87d43', '#b97d43', '#fff080', '#fff087', '#fff28e', '#feee85'],
['#fff294', '#bd8248', '#fff28e', '#fff087', '#fff087', '#feee85', '#feee85', '#ffef8a'],
['#ffef8a', '#ffef8a', '#fff087', '#fff080', '#fff07d', '#aa733e', '#b57b42', '#bf864e'],
['#fff07d', '#fff07d', '#fff07d', '#feee85', '#fff087', '#bd8249', '#be844b', '#bb7f44']],
"extremeHills": [['#99bb95', '#a1c09d', '#cccccc', '#999999', '#cccccc', '#cccccc', '#999999', '#999999'],
['#9bbc97', '#93b78e', '#96b992', '#97ba93', '#cccccc', '#92b68d', '#92b68d', '#99bb95'],
['#8eb389', '#92b68d', '#cccccc', '#9bbc97', '#99bb95', '#8eb389', '#cccccc', '#99bb95'],
['#97ba93', '#cccccc', '#999999', '#cccccc', '#9fbf9b', '#cccccc', '#999999', '#cccccc'],
['#cccccc', '#cccccc', '#999999', '#999999', '#cccccc', '#999999', '#999999', '#999999'],
['#a4c2a0', '#cccccc', '#999999', '#999999', '#999999', '#cccccc', '#97ba93', '#9bbc97'],
['#cccccc', '#9bbc97', '#99bb95', '#93b78e', '#92b68d', '#cccccc', '#cccccc', '#cccccc'],
['#999999', '#cccccc', '#92b68d', '#cccccc', '#99bb95', '#9ebe9a', '#cccccc', '#999999']],
"extremeHillsM": [['#dbd5ab', '#ddd8b1', '#cccccc', '#999999', '#cccccc', '#cccccc', '#999999', '#999999'],
['#dcd6ad', '#d9d3a6', '#dad4a9', '#dad4aa', '#cccccc', '#d8d2a4', '#d8d2a4', '#dbd5ab'],
['#d7d1a2', '#d8d2a4', '#cccccc', '#dcd6ad', '#dbd5ab', '#d7d1a2', '#cccccc', '#dbd5ab'],
['#dad4aa', '#cccccc', '#999999', '#cccccc', '#ddd8b0', '#cccccc', '#999999', '#cccccc'],
['#cccccc', '#cccccc', '#999999', '#999999', '#cccccc', '#999999', '#999999', '#999999'],
['#dfdab4', '#cccccc', '#999999', '#999999', '#999999', '#cccccc', '#dad4aa', '#dcd6ad'],
['#cccccc', '#dcd6ad', '#dbd5ab', '#d9d3a6', '#d8d2a4', '#cccccc', '#cccccc', '#cccccc'],
['#999999', '#cccccc', '#d8d2a4', '#cccccc', '#dbd5ab', '#ddd8b0', '#cccccc', '#999999']],
"extremeHillsPlus": [['#5b9b53', '#a1c09d', '#cccccc', '#999999', '#cccccc', '#cccccc', '#509948', '#529a47'],
['#9bbc97', '#569c4b', '#589b50', '#599c51', '#cccccc', '#92b68d', '#92b68d', '#996600'],
['#8eb389', '#549a4c', '#5b9b53', '#5e9c56', '#99bb95', '#8eb389', '#cccccc', '#99bb95'],
['#97ba93', '#cccccc', '#996600', '#cccccc', '#9fbf9b', '#569c4b', '#5b9b53', '#569c4b'],
['#cccccc', '#cccccc', '#999999', '#999999', '#cccccc', '#5b9b53', '#609e58', '#599c51'],
['#a4c2a0', '#cccccc', '#609e58', '#5b9b53', '#5b9b53', '#cccccc', '#996600', '#9bbc97'],
['#cccccc', '#9bbc97', '#5b9b53', '#569c4b', '#549a4c', '#cccccc', '#cccccc', '#cccccc'],
['#549a4c', '#cccccc', '#92b68d', '#996600', '#99bb95', '#9ebe9a', '#639e5b', '#5b9b53']],
"fen": [['#acb29d', '#805e29', '#adb39f', '#adb39f', '#728b37', '#a7ad97', '#a6ac96', '#baa584'],
['#baa584', '#a7ad97', '#abb19c', '#728b37', '#805e29', '#728b37', '#a6ac96', '#acb29d'],
['#a6ac96', '#a6ac96', '#acb29d', '#adb39f', '#805e29', '#a6ac96', '#acb29d', '#acb29d'],
['#abb19c', '#728b37', '#acb29d', '#adb39f', '#805e29', '#a7ad97', '#baa584', '#a7ad97'],
['#728b37', '#728b37', '#728b37', '#baa584', '#baa584', '#acb29d', '#baa584', '#baa584'],
['#adb39f', '#728b37', '#adb39f', '#acb29d', '#baa584', '#abb19c', '#abb19c', '#adb39f'],
['#728b37', '#805e29', '#728b37', '#a7ad97', '#728b37', '#a6ac96', '#a7ad97', '#adb39f'],
['#a6ac96', '#805e29', '#a6ac96', '#728b37', '#728b37', '#728b37', '#adb39f', '#baa584']],
"flower forest": [['#5b9b53', '#a1c09d', '#ff99ff', '#9ebe9a', '#97ba93', '#94b890', '#509948', '#529a47'],
['#9bbc97', '#569c4b', '#589b50', '#599c51', '#ffcc00', '#92b68d', '#92b68d', '#996600'],
['#8eb389', '#549a4c', '#5b9b53', '#5e9c56', '#99bb95', '#8eb389', '#99bb95', '#99bb95'],
['#ff3300', '#a4c2a0', '#ffffff', '#9bbc97', '#9fbf9b', '#569c4b', '#5b9b53', '#569c4b'],
['#a1c09d', '#9bbc97', '#94b890', '#ff00ff', '#93b78e', '#5b9b53', '#609e58', '#599c51'],
['#a4c2a0', '#ffff66', '#609e58', '#5b9b53', '#5b9b53', '#97ba93', '#ffffff', '#ffff66'],
['#9bbc97', '#9bbc97', '#5b9b53', '#569c4b', '#549a4c', '#ffcc00', '#93b78e', '#a4c2a0'],
['#549a4c', '#92b68d', '#92b68d', '#996600', '#99bb95', '#9ebe9a', '#639e5b', '#5b9b53']],
"forest": [['#5b9b53', '#a1c09d', '#a1c09d', '#9ebe9a', '#97ba93', '#94b890', '#509948', '#529a47'],
['#9bbc97', '#569c4b', '#589b50', '#599c51', '#92b68d', '#92b68d', '#92b68d', '#996600'],
['#8eb389', '#549a4c', '#5b9b53', '#5e9c56', '#99bb95', '#8eb389', '#99bb95', '#99bb95'],
['#97ba93', '#a4c2a0', '#996600', '#9bbc97', '#9fbf9b', '#569c4b', '#5b9b53', '#569c4b'],
['#a1c09d', '#9bbc97', '#94b890', '#97ba93', '#93b78e', '#5b9b53', '#609e58', '#599c51'],
['#a4c2a0', '#9cbd98', '#609e58', '#5b9b53', '#5b9b53', '#97ba93', '#996600', '#9bbc97'],
['#9bbc97', '#9bbc97', '#5b9b53', '#569c4b', '#549a4c', '#88af83', '#93b78e', '#a4c2a0'],
['#549a4c', '#92b68d', '#92b68d', '#996600', '#99bb95', '#9ebe9a', '#639e5b', '#5b9b53']],
"frozenRiver": [['#677ebe', '#768ec4', '#6c84c0', '#6074b2', '#576ba7', '#4f6399', '#30416e', '#2b3a63'],
['#6c84c0', '#495d94', '#576ba7', '#6981bf', '#51659e', '#44588b', '#3d5181', '#677ebe'],
['#344674', '#647abb', '#7b96c7', '#677dbe', '#586daa', '#3d5181', '#6c83c0', '#677dbe'],
['#586daa', '#7b98c7', '#637ab9', '#44588b', '#485c91', '#6175b3', '#6f86c1', '#3f5385'],
['#7691c4', '#6c83c0', '#475a8f', '#475b8f', '#667bbb', '#738cc3', '#586da8', '#3f5485'],
['#7996c6', '#51659e', '#5c71ae', '#6981bf', '#677cbd', '#50649c', '#5669a4', '#657bbc'],
['#6981bf', '#51659f', '#5c71ae', '#44588b', '#425486', '#3f5385', '#5c71ad', '#7995c6'],
['#44578b', '#3e5283', '#47598e', '#6981bf', '#6f86c1', '#6f86c1', '#768dc4', '#6981bf']],
"heathland": [['#57673e', '#57673e', '#57673e', '#87884b', '#848548', '#848548', '#7f8043', '#86874a'],
['#57673e', '#57673e', '#57673e', '#858649', '#838447', '#574a67', '#797a3d', '#88894c'],
['#8d8e51', '#724f17', '#898a4d', '#87884b', '#574a67', '#574a67', '#574a67', '#858649'],
['#57673e', '#808144', '#87884b', '#7e7f42', '#838447', '#828346', '#57673e', '#57673e'],
['#57673e', '#8a8b4e', '#574a67', '#818245', '#828346', '#858649', '#57673e', '#57673e'],
['#86874a', '#574a67', '#574a67', '#574a67', '#7f8043', '#87884b', '#87884b', '#724f17'],
['#7d7e41', '#7d7e41', '#8d8e51', '#8c8d50', '#848548', '#7b7c3f', '#574a67', '#7b7c3f'],
['#7f8043', '#818245', '#86874a', '#818245', '#848548', '#574a67', '#574a67', '#574a67']],
"highland": [['#99bb95', '#a1c09d', '#a1c09d', '#c9c9c9', '#b1b1b1', '#93b78e', '#92b68d', '#92b68d'],
['#c9c9c9', '#b1b1b1', '#97ba93', '#c9c9c9', '#b1b1b1', '#92b68d', '#92b68d', '#99bb95'],
['#c9c9c9', '#b1b1b1', '#99bb95', '#9bbc97', '#99bb95', '#92b68d', '#99bb95', '#99bb95'],
['#97ba93', '#a1c09d', '#99bb95', '#9bbc97', '#a1c09d', '#c9c9c9', '#b1b1b1', '#93b78e'],
['#a1c09d', '#9bbc97', '#93b78e', '#97ba93', '#93b78e', '#c9c9c9', '#b1b1b1', '#97ba93'],
['#a1c09d', '#9bbc97', '#c9c9c9', '#b1b1b1', '#99bb95', '#97ba93', '#97ba93', '#9bbc97'],
['#9bbc97', '#9bbc97', '#c9c9c9', '#b1b1b1', '#92b68d', '#92b68d', '#93b78e', '#a1c09d'],
['#92b68d', '#92b68d', '#92b68d', '#97ba93', '#99bb95', '#a1c09d', '#a1c09d', '#99bb95']],
"hillyForest": [['#5b9b53', '#a1c09d', '#a1c09d', '#9d9d9d', '#989898', '#94b890', '#509948', '#529a47'],
['#9bbc97', '#569c4b', '#589b50', '#599c51', '#92b68d', '#92b68d', '#92b68d', '#996600'],
['#8eb389', '#549a4c', '#5b9b53', '#5e9c56', '#99bb95', '#909090', '#999999', '#99bb95'],
['#97ba93', '#a4c2a0', '#996600', '#9bbc97', '#9fbf9b', '#569c4b', '#5b9b53', '#569c4b'],
['#a1c09d', '#9b9b9b', '#969696', '#989898', '#93b78e', '#5b9b53', '#609e58', '#599c51'],
['#a4c2a0', '#9c9c9c', '#609e58', '#5b9b53', '#5b9b53', '#97ba93', '#996600', '#9bbc97'],
['#9bbc97', '#9bbc97', '#5b9b53', '#569c4b', '#549a4c', '#8c8c8c', '#949494', '#a1a1a1'],
['#549a4c', '#92b68d', '#92b68d', '#996600', '#99bb95', '#9d9d9d', '#639e5b', '#5b9b53']],
"iceMountain": [['#ececec', '#f3f3f3', '#cccccc', '#999999', '#cccccc', '#cccccc', '#999999', '#999999'],
['#eeeeee', '#d1d1d1', '#dcdcdc', '#fbfbfb', '#cccccc', '#dddddd', '#c1c1c1', '#d0d0d0'],
['#d5d5d5', '#dddddd', '#cccccc', '#fafafa', '#f1f1f1', '#eaeaea', '#cccccc', '#ececec'],
['#e6e6e6', '#cccccc', '#999999', '#cccccc', '#ededed', '#cccccc', '#999999', '#cccccc'],
['#cccccc', '#cccccc', '#999999', '#999999', '#cccccc', '#999999', '#999999', '#999999'],
['#f5f5f5', '#cccccc', '#999999', '#999999', '#999999', '#cccccc', '#e5e5e5', '#eaeaea'],
['#cccccc', '#e4e4e4', '#f9f9f9', '#f6f6f6', '#dcdcdc', '#cccccc', '#cccccc', '#cccccc'],
['#999999', '#cccccc', '#dfdfdf', '#cccccc', '#efefef', '#f0f0f0', '#cccccc', '#999999']],
"icePlains": [['#ececec', '#f3f3f3', '#eeeeee', '#e8e8e8', '#e6e6e6', '#e3e3e3', '#bababa', '#c9c9c9'],
['#eeeeee', '#d1d1d1', '#dcdcdc', '#fbfbfb', '#e3e3e3', '#dddddd', '#c1c1c1', '#d0d0d0'],
['#d5d5d5', '#dddddd', '#e0e0e0', '#fafafa', '#f1f1f1', '#eaeaea', '#f7f7f7', '#ececec'],
['#e6e6e6', '#fefefe', '#fafafa', '#ececec', '#ededed', '#dddddd', '#dbdbdb', '#dcdcdc'],
['#f3f3f3', '#eeeeee', '#c6c6c6', '#c6c6c6', '#fafafa', '#dfdfdf', '#cbcbcb', '#dcdcdc'],
['#f5f5f5', '#e3e3e3', '#dcdcdc', '#dddddd', '#eaeaea', '#e3e3e3', '#e5e5e5', '#eaeaea'],
['#ececec', '#e4e4e4', '#f9f9f9', '#f6f6f6', '#dcdcdc', '#dcdcdc', '#f9f9f9', '#fefefe'],
['#ececec', '#dbdbdb', '#dfdfdf', '#ececec', '#efefef', '#f0f0f0', '#fdfdfd', '#fbfbfb']],
"icePlainsSpikes": [['#ececec', '#f3f3f3', '#eeeeee', '#006fdd', '#006cd4', '#e3e3e3', '#bababa', '#c9c9c9'],
['#eeeeee', '#d1d1d1', '#dcdcdc', '#fbfbfb', '#e3e3e3', '#dddddd', '#c1c1c1', '#d0d0d0'],
['#d5d5d5', '#dddddd', '#e0e0e0', '#fafafa', '#f1f1f1', '#0067ca', '#006cd7', '#ececec'],
['#e6e6e6', '#fefefe', '#fafafa', '#ececec', '#ededed', '#0069d1', '#006cd7', '#dcdcdc'],
['#f3f3f3', '#006fda', '#006ad3', '#006cd4', '#fafafa', '#dfdfdf', '#cbcbcb', '#dcdcdc'],
['#f5f5f5', '#006ddc', '#dcdcdc', '#dddddd', '#eaeaea', '#e3e3e3', '#e5e5e5', '#eaeaea'],
['#ececec', '#e4e4e4', '#f9f9f9', '#f6f6f6', '#dcdcdc', '#0062c3', '#0069d1', '#0072e3'],
['#ececec', '#dbdbdb', '#dfdfdf', '#ececec', '#efefef', '#006fdd', '#0070df', '#006cd7']],
"jungle": [['#009933', '#a1c09d', '#a1c09d', '#993300', '#97ba93', '#94b890', '#009933', '#009933'],
['#9bbc97', '#009933', '#009933', '#009933', '#92b68d', '#92b68d', '#92b68d', '#993300'],
['#8eb389', '#009933', '#009933', '#009933', '#99bb95', '#8eb389', '#99bb95', '#993300'],
['#97ba93', '#a4c2a0', '#993300', '#9bbc97', '#9fbf9b', '#009933', '#009933', '#009933'],
['#a1c09d', '#9bbc97', '#993300', '#97ba93', '#93b78e', '#009933', '#009933', '#009933'],
['#a4c2a0', '#9cbd98', '#009933', '#009933', '#009933', '#97ba93', '#993300', '#9bbc97'],
['#9bbc97', '#9bbc97', '#009933', '#009933', '#009933', '#88af83', '#993300', '#a4c2a0'],
['#009933', '#92b68d', '#92b68d', '#993300', '#99bb95', '#9ebe9a', '#009933', '#009933']],
"jungleedge": [['#009933', '#a89060', '#a89060', '#993300', '#a78d56', '#a58b54', '#009933', '#009933'],
['#a68e5b', '#009933', '#009933', '#009933', '#a48751', '#a48751', '#a48751', '#993300'],
['#a3854d', '#009933', '#009933', '#009933', '#a68d58', '#a3854d', '#a68d58', '#993300'],
['#a78d56', '#aa9364', '#993300', '#a68e5b', '#a78f5f', '#009933', '#009933', '#009933'],
['#a89060', '#a68e5b', '#993300', '#a78d56', '#a58852', '#009933', '#009933', '#009933'],
['#aa9364', '#a78f5c', '#009933', '#009933', '#009933', '#a78d56', '#993300', '#a68e5b'],
['#a68e5b', '#a68e5b', '#009933', '#009933', '#009933', '#a18648', '#993300', '#aa9364'],
['#009933', '#a48751', '#a48751', '#993300', '#a68d58', '#a8905d', '#009933', '#009933']],
"jungleM": [['#009933', '#a1c09d', '#a1c09d', '#993300', '#006cd4', '#94b890', '#009933', '#009933'],
['#9bbc97', '#009933', '#009933', '#009933', '#92b68d', '#92b68d', '#92b68d', '#993300'],
['#8eb389', '#009933', '#009933', '#009933', '#99bb95', '#0067ca', '#006cd7', '#993300'],
['#97ba93', '#a4c2a0', '#993300', '#9bbc97', '#9fbf9b', '#009933', '#009933', '#009933'],
['#a1c09d', '#006fda', '#993300', '#006cd4', '#93b78e', '#009933', '#009933', '#009933'],
['#a4c2a0', '#006ddc', '#009933', '#009933', '#009933', '#97ba93', '#993300', '#9bbc97'],
['#9bbc97', '#9bbc97', '#009933', '#009933', '#009933', '#0062c3', '#993300', '#0072e3'],
['#009933', '#92b68d', '#92b68d', '#993300', '#99bb95', '#006fdd', '#009933', '#009933']],
"lavender-fields": [['#e742ff', '#a1c09d', '#a1c09d', '#db11f9', '#97ba93', '#e742ff', '#92b68d', '#db11f9'],
['#9bbc97', '#93b78e', '#e742ff', '#db11f9', '#92b68d', '#92b68d', '#e742ff', '#db11f9'],
['#92b68d', '#92b68d', '#e742ff', '#9bbc97', '#99bb95', '#92b68d', '#e742ff', '#99bb95'],
['#db11f9', '#a1c09d', '#99bb95', '#9bbc97', '#e742ff', '#93b78e', '#99bb95', '#93b78e'],
['#db11f9', '#e742ff', '#93b78e', '#97ba93', '#e742ff', '#99bb95', '#e742ff', '#97ba93'],
['#a1c09d', '#e742ff', '#a1c09d', '#e742ff', '#99bb95', '#db11f9', '#e742ff', '#9bbc97'],
['#9bbc97', '#9bbc97', '#db11f9', '#e742ff', '#92b68d', '#db11f9', '#93b78e', '#a1c09d'],
['#e742ff', '#92b68d', '#db11f9', '#97ba93', '#99bb95', '#e742ff', '#a1c09d', '#99bb95']],
"lush-desert": [['#fff087', '#fef18f', '#fef18f', '#fff28e', '#feee85', '#ffef81', '#506fd3', '#506fd3'],
['#ffef8a', '#089b05', '#089b05', '#089b05', '#fff07d', '#fff07d', '#fff07d', '#fff087'],
['#089b05', '#fff087', '#089b05', '#ffef8a', '#089b05', '#ffef7a', '#fff087', '#336600'],
['#feee85', '#fff087', '#844d11', '#506fd3', '#fff28e', '#fff080', '#fff087', '#336600'],
['#fef18f', '#ffef8a', '#844d11', '#506fd3', '#506fd3', '#506fd3', '#fff087', '#feee85'],
['#fff294', '#ffef8a', '#fff28e', '#fff087', '#506fd3', '#506fd3', '#fff087', '#ffef8a'],
['#ffef8a', '#ffef8a', '#fff087', '#336600', '#fff07d', '#ffed73', '#fff080', '#fff294'],
['#506fd3', '#fff07d', '#fff07d', '#336600', '#fff087', '#506fd3', '#fef18f', '#fff087']],
"maple-woods": [['#b51622', '#a1c09d', '#a1c09d', '#a1c09d', '#97ba93', '#92b68d', '#b51622', '#b51622'],
['#9bbc97', '#b51622', '#b51622', '#b51622', '#92b68d', '#92b68d', '#1d6e1d', '#996900'],
['#92b68d', '#b51622', '#b51622', '#b51622', '#99bb95', '#92b68d', '#1d6e1d', '#99bb95'],
['#97ba93', '#a1c09d', '#996900', '#9bbc97', '#a1c09d', '#1d6e1d', '#1d6e1d', '#1d6e1d'],
['#a1c09d', '#9bbc97', '#92b68d', '#97ba93', '#92b68d', '#1d6e1d', '#1d6e1d', '#1d6e1d'],
['#a1c09d', '#9bbc97', '#b51622', '#b51622', '#b51622', '#97ba93', '#996900', '#9bbc97'],
['#9bbc97', '#9bbc97', '#b51622', '#b51622', '#b51622', '#92b68d', '#92b68d', '#a1c09d'],
['#b51622', '#92b68d', '#92b68d', '#996900', '#99bb95', '#a1c09d', '#b51622', '#b51622']],
"marsh": [['#334f2a', '#353eb3', '#353eb3', '#353eb3', '#364c30', '#364630', '#33462d', '#374f28'],
['#334a2e', '#353eb3', '#353eb3', '#353eb3', '#36472e', '#37472c', '#304d2c', '#394828'],
['#353eb3', '#385030', '#394e30', '#384c2c', '#344c29', '#324a2c', '#354e2e', '#353eb3'],
['#354929', '#344f2d', '#384f2f', '#334c27', '#353eb3', '#355130', '#384a2a', '#384f2d'],
['#354a2d', '#394d2b', '#324f30', '#353eb3', '#354c32', '#353eb3', '#353eb3', '#384e29'],
['#374d27', '#374d2c', '#354d2a', '#344d2a', '#334c2e', '#353eb3', '#353eb3', '#36472f'],
['#353eb3', '#353eb3', '#3b502a', '#3b4d2d', '#364e30', '#314928', '#334d2d', '#353eb3'],
['#353eb3', '#353eb3', '#353eb3', '#354e2e', '#36482c', '#394b2c', '#353eb3', '#353eb3']],
"meadow": [['#36683b', '#376a3c', '#35633c', '#3b653f', '#204920', '#204920', '#204920', '#3a6839'],
['#36633f', '#386141', '#37633d', '#3a6839', '#39603f', '#493a20', '#33663d', '#3c6139'],
['#3e623e', '#3b6941', '#3c6741', '#3b653d', '#37653a', '#35633d', '#38673f', '#204920'],
['#204920', '#37683e', '#3b6840', '#366538', '#38653e', '#386a41', '#204920', '#204920'],
['#38633e', '#3c663c', '#356841', '#37653f', '#386543', '#39613e', '#3a653c', '#3b673a'],
['#3a6638', '#3a663d', '#204920', '#37663b', '#36653f', '#204920', '#3b653f', '#396040'],
['#35663f', '#204920', '#204920', '#204920', '#396741', '#204920', '#36663e', '#34623c'],
['#36643d', '#38633b', '#3a623b', '#38673f', '#204920', '#204920', '#204920', '#3d6340']],
"megaSpruceTaiga": [['#336600', '#a89060', '#336600', '#663300', '#a78d56', '#a58b54', '#336600', '#336600'],
['#a68e5b', '#a58852', '#336600', '#a78d56', '#a48751', '#a48751', '#a48751', '#663300'],
['#a3854d', '#336600', '#336600', '#336600', '#a68d58', '#a3854d', '#336600', '#663300'],
['#a78d56', '#aa9364', '#663300', '#a68e5b', '#a78f5f', '#a58852', '#336600', '#a58852'],
['#a89060', '#a68e5b', '#663300', '#336600', '#a58852', '#336600', '#336600', '#336600'],
['#aa9364', '#a78f5c', '#a8905d', '#336600', '#a68d58', '#a78d56', '#663300', '#a68e5b'],
['#a68e5b', '#a68e5b', '#336600', '#336600', '#336600', '#a18648', '#663300', '#336600'],
['#336600', '#a48751', '#a48751', '#663300', '#a68d58', '#a8905d', '#a89060', '#336600']],
"megaSpruceTaigaHills": [['#336600', '#a89060', '#336600', '#663300', '#989898', '#a58b54', '#336600', '#336600'],
['#a68e5b', '#a58852', '#336600', '#a78d56', '#a48751', '#a48751', '#a48751', '#663300'],
['#a3854d', '#336600', '#336600', '#336600', '#a68d58', '#909090', '#336600', '#663300'],
['#a78d56', '#aa9364', '#663300', '#a68e5b', '#a78f5f', '#949494', '#336600', '#a58852'],
['#a89060', '#9b9b9b', '#663300', '#336600', '#a58852', '#336600', '#336600', '#336600'],
['#aa9364', '#9c9c9c', '#a8905d', '#336600', '#a68d58', '#a78d56', '#663300', '#a68e5b'],
['#a68e5b', '#a68e5b', '#336600', '#336600', '#336600', '#8c8c8c', '#663300', '#336600'],
['#336600', '#a48751', '#a48751', '#663300', '#a68d58', '#9d9d9d', '#9f9f9f', '#336600']],
"megaTaiga": [['#336600', '#a1c09d', '#336600', '#663300', '#97ba93', '#94b890', '#336600', '#336600'],
['#9bbc97', '#93b78e', '#336600', '#97ba93', '#92b68d', '#92b68d', '#92b68d', '#663300'],
['#8eb389', '#336600', '#336600', '#336600', '#99bb95', '#8eb389', '#336600', '#663300'],
['#97ba93', '#a4c2a0', '#663300', '#9bbc97', '#9fbf9b', '#93b78e', '#336600', '#93b78e'],
['#a1c09d', '#9bbc97', '#663300', '#336600', '#93b78e', '#336600', '#336600', '#336600'],
['#a4c2a0', '#9cbd98', '#9ebe9a', '#336600', '#99bb95', '#97ba93', '#663300', '#9bbc97'],
['#9bbc97', '#9bbc97', '#336600', '#336600', '#336600', '#88af83', '#663300', '#336600'],
['#336600', '#92b68d', '#92b68d', '#663300', '#99bb95', '#9ebe9a', '#a1c09d', '#336600']],
"megaTaigaHills": [['#336600', '#a1c09d', '#336600', '#663300', '#989898', '#94b890', '#336600', '#336600'],
['#9bbc97', '#93b78e', '#336600', '#97ba93', '#92b68d', '#92b68d', '#92b68d', '#663300'],
['#8eb389', '#336600', '#336600', '#336600', '#99bb95', '#909090', '#336600', '#663300'],
['#97ba93', '#a4c2a0', '#663300', '#9bbc97', '#9fbf9b', '#949494', '#336600', '#93b78e'],
['#a1c09d', '#9b9b9b', '#663300', '#336600', '#93b78e', '#336600', '#336600', '#336600'],
['#a4c2a0', '#9c9c9c', '#9ebe9a', '#336600', '#99bb95', '#97ba93', '#663300', '#9bbc97'],
['#9bbc97', '#9bbc97', '#336600', '#336600', '#336600', '#8c8c8c', '#663300', '#336600'],
['#336600', '#92b68d', '#92b68d', '#663300', '#99bb95', '#9d9d9d', '#9f9f9f', '#336600']],
"mesa": [['#d17e2d', '#d08138', '#d08138', '#006fdd', '#006cd4', '#d27b27', '#bf5a02', '#c25a00'],
['#cf7f31', '#c05e08', '#d37c28', '#d47d29', '#bf5d07', '#bf5d07', '#bf5d07', '#d17e2d'],
['#bf5a02', '#bf5d07', '#d17e2d', '#cf7f31', '#d17e2d', '#0067ca', '#006cd7', '#d17e2d'],
['#d47d29', '#d0843d', '#d17e2d', '#cf7f31', '#cf8037', '#0069d1', '#006cd7', '#c05e08'],
['#d08138', '#006fda', '#006ad3', '#006cd4', '#c05e08', '#d17e2d', '#d18133', '#d47d29'],
['#d0843d', '#006ddc', '#d18133', '#d17e2d', '#d17e2d', '#d47d29', '#d47d29', '#cf7f31'],
['#cf7f31', '#cf7f31', '#d17e2d', '#c05e08', '#bf5d07', '#0062c3', '#0069d1', '#0072e3'],
['#bf5d07', '#bf5d07', '#bf5d07', '#d47d29', '#d17e2d', '#006fdd', '#0070df', '#006cd7']],
"mesa bryce": [['#d17e2d', '#d08138', '#ff99ff', '#d18133', '#d47d29', '#d27b27', '#bf5a02', '#336600'],
['#cf7f31', '#c05e08', '#d37c28', '#d47d29', '#ffcc00', '#bf5d07', '#bf5d07', '#336600'],
['#bf5a02', '#bf5d07', '#336600', '#cf7f31', '#d17e2d', '#bf5a02', '#d17e2d', '#d17e2d'],
['#ff3300', '#d0843d', '#336600', '#cf7f31', '#cf8037', '#c05e08', '#d17e2d', '#c05e08'],
['#d08138', '#cf7f31', '#d27b27', '#ff00ff', '#c05e08', '#d17e2d', '#336600', '#d47d29'],
['#d0843d', '#ffff66', '#d18133', '#d17e2d', '#d17e2d', '#d47d29', '#336600', '#ffff66'],
['#cf7f31', '#cf7f31', '#d17e2d', '#336600', '#bf5d07', '#ffcc00', '#c05e08', '#d0843d'],
['#bf5d07', '#bf5d07', '#bf5d07', '#336600', '#d17e2d', '#d18133', '#d08138', '#d17e2d']],
"mesa plateau": [['#d17e2d', '#d08138', '#d08138', '#d18133', '#d47d29', '#d27b27', '#bf5a02', '#c25a00'],
['#cf7f31', '#c05e08', '#d37c28', '#d47d29', '#bf5d07', '#bf5d07', '#bf5d07', '#d17e2d'],
['#bf5a02', '#bf5d07', '#d17e2d', '#cf7f31', '#d17e2d', '#bf5a02', '#d17e2d', '#d17e2d'],
['#d47d29', '#d0843d', '#d17e2d', '#cf7f31', '#cf8037', '#c05e08', '#d17e2d', '#c05e08'],
['#d08138', '#cf7f31', '#d27b27', '#d47d29', '#c05e08', '#d17e2d', '#d18133', '#d47d29'],
['#d0843d', '#d08032', '#d18133', '#d17e2d', '#d17e2d', '#d47d29', '#d47d29', '#cf7f31'],
['#cf7f31', '#cf7f31', '#d17e2d', '#c05e08', '#bf5d07', '#bd6100', '#c05e08', '#d0843d'],
['#bf5d07', '#bf5d07', '#bf5d07', '#d47d29', '#d17e2d', '#d18133', '#d08138', '#d17e2d']],
"mesa plateau f": [['#5b9b53', '#d08138', '#d08138', '#d18133', '#d47d29', '#d27b27', '#509948', '#529a47'],
['#cf7f31', '#569c4b', '#589b50', '#599c51', '#bf5d07', '#bf5d07', '#bf5d07', '#996600'],
['#bf5a02', '#549a4c', '#5b9b53', '#5e9c56', '#d17e2d', '#bf5a02', '#d17e2d', '#d17e2d'],
['#d47d29', '#d0843d', '#996600', '#cf7f31', '#cf8037', '#569c4b', '#5b9b53', '#569c4b'],
['#d08138', '#cf7f31', '#d27b27', '#d47d29', '#c05e08', '#5b9b53', '#609e58', '#599c51'],
['#d0843d', '#d08032', '#609e58', '#5b9b53', '#5b9b53', '#d47d29', '#996600', '#cf7f31'],
['#cf7f31', '#cf7f31', '#5b9b53', '#569c4b', '#549a4c', '#bd6100', '#c05e08', '#d0843d'],
['#549a4c', '#bf5d07', '#bf5d07', '#996600', '#d17e2d', '#d18133', '#639e5b', '#5b9b53']],
"mesa plateau fm": [['#5b9b53', '#d08138', '#d08138', '#bd8249', '#b97d43', '#d27b27', '#509948', '#529a47'],
['#cf7f31', '#569c4b', '#589b50', '#599c51', '#bf5d07', '#bf5d07', '#bf5d07', '#996600'],
['#bf5a02', '#549a4c', '#5b9b53', '#5e9c56', '#d17e2d', '#b07740', '#bb7f44', '#d17e2d'],
['#d47d29', '#d0843d', '#996600', '#cf7f31', '#cf8037', '#569c4b', '#5b9b53', '#569c4b'],
['#d08138', '#bc8046', '#b87d43', '#b97d43', '#c05e08', '#5b9b53', '#609e58', '#599c51'],
['#d0843d', '#bd8248', '#609e58', '#5b9b53', '#5b9b53', '#d47d29', '#996600', '#cf7f31'],
['#cf7f31', '#cf7f31', '#5b9b53', '#569c4b', '#549a4c', '#aa733e', '#b57b42', '#bf864e'],
['#549a4c', '#bf5d07', '#bf5d07', '#996600', '#d17e2d', '#bd8249', '#639e5b', '#5b9b53']],
"mesa plateau m": [['#d17e2d', '#d08138', '#d08138', '#bd8249', '#b97d43', '#d27b27', '#bf5a02', '#c25a00'],
['#cf7f31', '#c05e08', '#d37c28', '#d47d29', '#bf5d07', '#bf5d07', '#bf5d07', '#d17e2d'],
['#bf5a02', '#bf5d07', '#d17e2d', '#cf7f31', '#d17e2d', '#b07740', '#bb7f44', '#d17e2d'],
['#d47d29', '#d0843d', '#d17e2d', '#cf7f31', '#cf8037', '#b57b42', '#bb7f44', '#c05e08'],
['#d08138', '#bc8046', '#b87d43', '#b97d43', '#c05e08', '#d17e2d', '#d18133', '#d47d29'],
['#d0843d', '#bd8248', '#d18133', '#d17e2d', '#d17e2d', '#d47d29', '#d47d29', '#cf7f31'],
['#cf7f31', '#cf7f31', '#d17e2d', '#c05e08', '#bf5d07', '#aa733e', '#b57b42', '#bf864e'],
['#bf5d07', '#bf5d07', '#bf5d07', '#d47d29', '#d17e2d', '#bd8249', '#be844b', '#bb7f44']],
"mountain": [['#576b40', '#888886', '#888886', '#5c6844', '#888886', '#5a6246', '#493706', '#5b6b3e'],
['#888886', '#596446', '#344914', '#5b6b3e', '#5a6344', '#5b6342', '#888886', '#5d643e'],
['#5f6543', '#344914', '#344914', '#344914', '#58683f', '#888886', '#888886', '#888886'],
['#59653f', '#586b43', '#344914', '#57683d', '#888886', '#596d46', '#344914', '#5c6b43'],
['#596643', '#344914', '#344914', '#344914', '#596848', '#5a6443', '#344914', '#5c6a3f'],
['#5b693d', '#5b6942', '#344914', '#586940', '#576844', '#344914', '#344914', '#344914'],
['#566944', '#566a48', '#493706', '#5f6943', '#5a6a46', '#344914', '#344914', '#344914'],
['#576742', '#888886', '#888886', '#888886', '#5a6442', '#5d6742', '#344914', '#5e6645']],
"mushroomisland": [['#ff6600', '#887b92', '#887b92', '#877991', '#83748e', '#81728c', '#ff6600', '#ff6600'],
['#85778f', '#ffcc99', '#ffcc99', '#ffcc99', '#7f708a', '#7f708a', '#7f708a', '#ffffcc'],
['#7c6d88', '#7f708a', '#ffffcc', '#85778f', '#84758e', '#7c6d88', '#84758e', '#84758e'],
['#83748e', '#8b7e94', '#ffffcc', '#85778f', '#877a91', '#ffcc99', '#ffcc99', '#ffcc99'],
['#887b92', '#85778f', '#81728c', '#83748e', '#80718b', '#84758e', '#ffffcc', '#83748e'],
['#8b7e94', '#867890', '#ff6600', '#ff6600', '#ff6600', '#83748e', '#ffffcc', '#85778f'],
['#85778f', '#85778f', '#ff6600', '#ff6600', '#ff6600', '#7a6985', '#80718b', '#8b7e94'],
['#ff6600', '#7f708a', '#7f708a', '#ffffcc', '#84758e', '#877991', '#ff6600', '#ff6600']],
"mushroomisland shore": [['#84758e', '#887b92', '#887b92', '#006fdd', '#006cd4', '#81728c', '#7c6d88', '#7c6c88'],
['#85778f', '#80718b', '#82738d', '#83748e', '#7f708a', '#7f708a', '#7f708a', '#84758e'],
['#7c6d88', '#7f708a', '#84758e', '#85778f', '#84758e', '#0067ca', '#006cd7', '#84758e'],
['#83748e', '#8b7e94', '#84758e', '#85778f', '#877a91', '#0069d1', '#006cd7', '#80718b'],
['#887b92', '#006fda', '#006ad3', '#006cd4', '#80718b', '#84758e', '#877991', '#83748e'],
['#8b7e94', '#006ddc', '#877991', '#84758e', '#84758e', '#83748e', '#83748e', '#85778f'],
['#85778f', '#85778f', '#84758e', '#80718b', '#7f708a', '#0062c3', '#0069d1', '#0072e3'],
['#7f708a', '#7f708a', '#7f708a', '#83748e', '#84758e', '#006fdd', '#0070df', '#006cd7']],
"mystic-grove": [['#533979', '#3b7b7c', '#39747c', '#694a1e', '#3d7681', '#3d7081', '#533979', '#533979'],
['#3a747f', '#2e6843', '#2e6843', '#2e6843', '#3d717f', '#3e717d', '#533979', '#533979'],
['#42737e', '#2e6843', '#2e6843', '#2e6843', '#3b767a', '#39747d', '#3c787f', '#694a1e'],
['#3c737a', '#2e6843', '#694a1e', '#2e6843', '#3c767e', '#3c7b81', '#3f747b', '#3f797e'],
['#3c747e', '#40777c', '#694a1e', '#3b767f', '#3c7683', '#533979', '#533979', '#533979'],
['#3e7778', '#3e777d', '#3c777b', '#3b777b', '#3a767f', '#533979', '#533979', '#533979'],
['#39777f', '#397883', '#46627e', '#46627e', '#46627e', '#387379', '#694a1e', '#38737c'],
['#533979', '#3c747b', '#46627e', '#46627e', '#46627e', '#40757d', '#407975', '#417480']],
"ocean": [['#5f7df1', '#6a86f2', '#6a86f2', '#6784f2', '#5c7bf1', '#5878f1', '#4d6ff0', '#4b6df0'],
['#617ff1', '#5474f0', '#5a79f1', '#5c7bf1', '#5273f0', '#5273f0', '#5273f0', '#5f7df1'],
['#4d6ff0', '#5273f0', '#5f7df1', '#617ff1', '#5f7df1', '#4d6ff0', '#5f7df1', '#5f7df1'],
['#5c7bf1', '#708bf3', '#5f7df1', '#617ff1', '#6885f2', '#5474f0', '#5f7df1', '#5474f0'],
['#6a86f2', '#617ff1', '#5878f1', '#5c7bf1', '#5474f0', '#5f7df1', '#6784f2', '#5c7bf1'],
['#708bf3', '#6381f2', '#6784f2', '#5f7df1', '#5f7df1', '#5c7bf1', '#5c7bf1', '#617ff1'],
['#617ff1', '#617ff1', '#5f7df1', '#5474f0', '#5273f0', '#4468ef', '#5474f0', '#708bf3'],
['#5273f0', '#5273f0', '#5273f0', '#5c7bf1', '#5f7df1', '#6784f2', '#6a86f2', '#5f7df1']],
"ominous-woods": [['#6a3782', '#4c1367', '#4c1367', '#4c1367', '#713e89', '#4c1367', '#6c3984', '#74418c'],
['#6c3984', '#6f3c87', '#734e22', '#713e89', '#4c1367', '#4c1367', '#4c1367', '#74418c'],
['#74418c', '#74418c', '#74418c', '#74418c', '#6e3b86', '#734e22', '#6f3c87', '#713e89'],
['#713e89', '#4c1367', '#74418c', '#6a3782', '#713e89', '#734e22', '#74418c', '#74418c'],
['#6e3b86', '#4c1367', '#6a3782', '#6e3b86', '#6f3c87', '#4c1367', '#4c1367', '#4c1367'],
['#4c1367', '#4c1367', '#4c1367', '#6e3b86', '#6c3984', '#4c1367', '#4c1367', '#4c1367'],
['#6a3782', '#734e22', '#74418c', '#74418c', '#713e89', '#6a3782', '#734e22', '#6a3782'],
['#6c3984', '#4c1367', '#4c1367', '#4c1367', '#713e89', '#4c1367', '#734e22', '#74418c']],
"plains": [['#99bb95', '#a1c09d', '#a1c09d', '#9ebe9a', '#97ba93', '#94b890', '#8eb389', '#8db388'],
['#9bbc97', '#93b78e', '#96b992', '#97ba93', '#92b68d', '#92b68d', '#92b68d', '#99bb95'],
['#8eb389', '#92b68d', '#99bb95', '#9bbc97', '#99bb95', '#8eb389', '#99bb95', '#99bb95'],
['#97ba93', '#a4c2a0', '#99bb95', '#9bbc97', '#9fbf9b', '#93b78e', '#99bb95', '#93b78e'],
['#a1c09d', '#9bbc97', '#94b890', '#97ba93', '#93b78e', '#99bb95', '#9ebe9a', '#97ba93'],
['#a4c2a0', '#9cbd98', '#9ebe9a', '#99bb95', '#99bb95', '#97ba93', '#97ba93', '#9bbc97'],
['#9bbc97', '#9bbc97', '#99bb95', '#93b78e', '#92b68d', '#88af83', '#93b78e', '#a4c2a0'],
['#92b68d', '#92b68d', '#92b68d', '#97ba93', '#99bb95', '#9ebe9a', '#a1c09d', '#99bb95']],
"quagmire": [['#a06303', '#a1690c', '#a1690c', '#6c4913', '#6c4913', '#9f6100', '#a06302', '#a06505'],
['#a06505', '#9f6100', '#b49057', '#b49057', '#a06201', '#a06201', '#a06201', '#a06303'],
['#a06302', '#a06201', '#a06303', '#a06505', '#a06303', '#6c4913', '#6c4913', '#a06303'],
['#b49057', '#b49057', '#a06303', '#a06505', '#a1690c', '#6c4913', '#6c4913', '#b49057'],
['#b49057', '#6c4913', '#6c4913', '#6c4913', '#9f6100', '#a06303', '#b49057', '#b49057'],
['#a1690c', '#6c4913', '#b49057', '#b49057', '#a06303', '#a06303', '#a06303', '#a06505'],
['#a06505', '#a06505', '#b49057', '#b49057', '#a06201', '#6c4913', '#6c4913', '#6c4913'],
['#a06201', '#a06201', '#a06201', '#a06303', '#a06303', '#6c4913', '#6c4913', '#6c4913']],
"redwood-forest": [['#6f5034', '#5c6032', '#4b652a', '#556f34', '#526c31', '#24320f', '#24320f', '#24320f'],
['#55632f', '#506a2f', '#553421', '#616636', '#546931', '#546e33', '#553421', '#616b39'],
['#5b753a', '#24320f', '#24320f', '#24320f', '#725337', '#655631', '#553421', '#536d32'],
['#516b30', '#24320f', '#24320f', '#24320f', '#745539', '#553421', '#553421', '#553421'],
['#725337', '#795e40', '#553421', '#6c5836', '#735438', '#76573b', '#6c603a', '#556f34'],
['#76593c', '#24320f', '#24320f', '#24320f', '#705135', '#78593d', '#626938', '#5e6534'],
['#56602e', '#605a30', '#553421', '#5a7439', '#626336', '#4f602a', '#553421', '#555d2c'],
['#705135', '#553421', '#553421', '#553421', '#526c31', '#24320f', '#24320f', '#24320f']],
"river": [['#255fff', '#3a78ff', '#2b68ff', '#2255ef', '#1a4ce2', '#1648d0', '#002b9b', '#00258c'],
['#2b68ff', '#1042cc', '#1a4ce2', '#2763ff', '#1648d7', '#0d3ebf', '#093ab3', '#255fff'],
['#0330a2', '#225bfb', '#4286ff', '#255dff', '#1a50e7', '#093ab3', '#2b65ff', '#255dff'],
['#1a50e7', '#428aff', '#225bf9', '#0d3ebf', '#1042c7', '#2255f1', '#306cff', '#093ab8'],
['#3a80ff', '#2b65ff', '#103ec5', '#1042c5', '#255bfb', '#3676ff', '#1a50e4', '#093cb8'],
['#3e86ff', '#1648d7', '#1e53eb', '#2763ff', '#255bfd', '#1648d5', '#1a4adf', '#225bfd'],
['#2763ff', '#164ad9', '#1e53eb', '#0d3ebf', '#0d3ab8', '#093ab8', '#1e53e9', '#3e84ff'],
['#0d3cbf', '#093ab5', '#103ec3', '#2763ff', '#306aff', '#306cff', '#3a76ff', '#2763ff']],
"roofed forest": [['#336600', '#a1c09d', '#a1c09d', '#9ebe9a', '#97ba93', '#336600', '#663300', '#336600'],
['#336600', '#336600', '#336600', '#336600', '#92b68d', '#92b68d', '#663300', '#663300'],
['#336600', '#663300', '#336600', '#336600', '#99bb95', '#8eb389', '#99bb95', '#99bb95'],
['#97ba93', '#663300', '#663300', '#9bbc97', '#336600', '#336600', '#336600', '#336600'],
['#a1c09d', '#9bbc97', '#94b890', '#97ba93', '#336600', '#336600', '#663300', '#336600'],
['#a4c2a0', '#336600', '#336600', '#336600', '#336600', '#663300', '#663300', '#9bbc97'],
['#9bbc97', '#336600', '#336600', '#663300', '#336600', '#88af83', '#93b78e', '#a4c2a0'],
['#336600', '#336600', '#663300', '#663300', '#99bb95', '#336600', '#336600', '#336600']],
"roofed forest m": [['#336600', '#a1c09d', '#a1c09d', '#006fdd', '#006cd4', '#336600', '#663300', '#336600'],
['#336600', '#336600', '#336600', '#336600', '#92b68d', '#92b68d', '#663300', '#663300'],
['#336600', '#663300', '#336600', '#336600', '#99bb95', '#0067ca', '#006cd7', '#99bb95'],
['#97ba93', '#663300', '#663300', '#9bbc97', '#336600', '#336600', '#336600', '#336600'],
['#a1c09d', '#006fda', '#006ad3', '#006cd4', '#336600', '#336600', '#663300', '#336600'],
['#a4c2a0', '#336600', '#336600', '#336600', '#336600', '#663300', '#663300', '#9bbc97'],
['#9bbc97', '#336600', '#336600', '#663300', '#336600', '#0062c3', '#0069d1', '#0072e3'],
['#336600', '#336600', '#663300', '#663300', '#99bb95', '#336600', '#336600', '#336600']],
"savanna": [['#a25128', '#a89060', '#007928', '#a8905d', '#a78d56', '#a58b54', '#a3854d', '#a4854b'],
['#a68e5b', '#007928', '#007928', '#007928', '#a48751', '#a48751', '#a48751', '#a25128'],
['#a3854d', '#a48751', '#a68d58', '#a25128', '#a68d58', '#a3854d', '#007928', '#a68d58'],
['#a78d56', '#aa9364', '#a25128', '#a68e5b', '#a78f5f', '#007928', '#007928', '#007928'],
['#a89060', '#a68e5b', '#a58b54', '#007928', '#a58852', '#a25128', '#a8905d', '#a78d56'],
['#aa9364', '#a78f5c', '#007928', '#007928', '#007928', '#a78d56', '#a25128', '#a68e5b'],
['#a68e5b', '#a68e5b', '#a25128', '#a58852', '#a48751', '#a18648', '#a58852', '#007928'],
['#007928', '#a48751', '#a48751', '#a25128', '#a68d58', '#a8905d', '#007928', '#007928']],
"savannaM": [['#a25128', '#a89060', '#007928', '#006fdd', '#006cd4', '#a58b54', '#a3854d', '#a4854b'],
['#a68e5b', '#007928', '#007928', '#007928', '#a48751', '#a48751', '#a48751', '#a25128'],
['#a3854d', '#a48751', '#a68d58', '#a25128', '#a68d58', '#0067ca', '#007928', '#a68d58'],
['#a78d56', '#aa9364', '#a25128', '#a68e5b', '#a78f5f', '#007928', '#007928', '#007928'],
['#a89060', '#006fda', '#006ad3', '#007928', '#a58852', '#a25128', '#a8905d', '#a78d56'],
['#aa9364', '#006ddc', '#007928', '#007928', '#007928', '#a78d56', '#a25128', '#a68e5b'],
['#a68e5b', '#a68e5b', '#a25128', '#a58852', '#a48751', '#0062c3', '#0069d1', '#007928'],
['#007928', '#a48751', '#a48751', '#a25128', '#a68d58', '#006fdd', '#007928', '#007928']],
"savannaPlateau": [['#a25128', '#a89060', '#007928', '#9d9d9d', '#989898', '#a58b54', '#a3854d', '#a4854b'],
['#a68e5b', '#007928', '#007928', '#007928', '#a48751', '#a48751', '#a48751', '#a25128'],
['#a3854d', '#a48751', '#a68d58', '#a25128', '#a68d58', '#909090', '#007928', '#a68d58'],
['#a78d56', '#aa9364', '#a25128', '#a68e5b', '#a78f5f', '#007928', '#007928', '#007928'],
['#a89060', '#9b9b9b', '#969696', '#007928', '#a58852', '#a25128', '#a8905d', '#a78d56'],
['#aa9364', '#9c9c9c', '#007928', '#007928', '#007928', '#a78d56', '#a25128', '#a68e5b'],
['#a68e5b', '#a68e5b', '#a25128', '#a58852', '#a48751', '#8c8c8c', '#949494', '#007928'],
['#007928', '#a48751', '#a48751', '#a25128', '#a68d58', '#9d9d9d', '#007928', '#007928']],
"savannaPlateauM": [['#a25128', '#a89060', '#007928', '#a8905d', '#a78d56', '#a58b54', '#a3854d', '#a4854b'],
['#a68e5b', '#007928', '#007928', '#007928', '#ffcc00', '#a48751', '#a48751', '#a25128'],
['#a3854d', '#a48751', '#a68d58', '#a25128', '#a68d58', '#a3854d', '#007928', '#a68d58'],
['#ff3300', '#aa9364', '#a25128', '#a68e5b', '#a78f5f', '#007928', '#007928', '#007928'],
['#a89060', '#a68e5b', '#a58b54', '#007928', '#a58852', '#a25128', '#a8905d', '#a78d56'],
['#aa9364', '#ffff66', '#007928', '#007928', '#007928', '#a78d56', '#a25128', '#ffff66'],
['#a68e5b', '#a68e5b', '#a25128', '#a58852', '#a48751', '#ffcc00', '#a58852', '#007928'],
['#007928', '#a48751', '#a48751', '#a25128', '#a68d58', '#a8905d', '#007928', '#007928']],
"shield": [['#acb29d', '#805e29', '#acb29d', '#acb29d', '#728b37', '#a7ad97', '#a6ac96', '#d5d5d5'],
['#d5d5d5', '#a7ad97', '#acb29d', '#728b37', '#805e29', '#728b37', '#a6ac96', '#acb29d'],
['#a6ac96', '#a6ac96', '#acb29d', '#acb29d', '#805e29', '#a6ac96', '#acb29d', '#acb29d'],
['#acb29d', '#728b37', '#acb29d', '#acb29d', '#805e29', '#a7ad97', '#d5d5d5', '#a7ad97'],
['#728b37', '#728b37', '#728b37', '#d5d5d5', '#d5d5d5', '#83b665', '#83b665', '#83b665'],
['#acb29d', '#728b37', '#acb29d', '#d5d5d5', '#d5d5d5', '#83b665', '#83b665', '#83b665'],
['#728b37', '#805e29', '#728b37', '#a7ad97', '#728b37', '#a6ac96', '#ffffff', '#acb29d'],
['#a6ac96', '#805e29', '#a6ac96', '#728b37', '#728b37', '#728b37', '#acb29d', '#d5d5d5']],
"shrubland": [['#99bb95', '#a1c09d', '#a1c09d', '#9ebe9a', '#97ba93', '#1d6e1d', '#1d6e1d', '#1d6e1d'],
['#9bbc97', '#93b78e', '#97ba93', '#97ba93', '#92b68d', '#92b68d', '#92b68d', '#99bb95'],
['#92b68d', '#92b68d', '#1d6e1d', '#9bbc97', '#99bb95', '#92b68d', '#99bb95', '#99bb95'],
['#97ba93', '#1d6e1d', '#1d6e1d', '#1d6e1d', '#9ebe9a', '#93b78e', '#99bb95', '#93b78e'],
['#a1c09d', '#9bbc97', '#93b78e', '#97ba93', '#93b78e', '#99bb95', '#9ebe9a', '#97ba93'],
['#a1c09d', '#1d6e1d', '#9ebe9a', '#99bb95', '#99bb95', '#97ba93', '#97ba93', '#9bbc97'],
['#1d6e1d', '#1d6e1d', '#1d6e1d', '#93b78e', '#92b68d', '#92b68d', '#93b78e', '#a1c09d'],
['#92b68d', '#92b68d', '#92b68d', '#97ba93', '#99bb95', '#9ebe9a', '#1d6e1d', '#99bb95']],
"silkglades": [['#b2b08c', '#b8b695', '#7a7458', '#b5b391', '#b0ae89', '#ffffff', '#68654f', '#a9a67e'],
['#524124', '#524124', '#524124', '#b0ae89', '#adaa84', '#adaa84', '#adaa84', '#b2b08c'],
['#524124', '#524124', '#524124', '#b3b18e', '#b2b08c', '#a9a67f', '#b2b08c', '#b2b08c'],
['#b0ae89', '#68654f', '#37382f', '#37382f', '#37382f', '#aeab85', '#b2b08c', '#aeab85'],
['#b8b695', '#b3b18e', '#37382f', '#37382f', '#37382f', '#b2b08c', '#ffffff', '#b0ae89'],
['#ffffff', '#b4b28f', '#b5b391', '#7a7458', '#b2b08c', '#b0ae89', '#b0ae89', '#b3b18e'],
['#b3b18e', '#37382f', '#37382f', '#37382f', '#adaa84', '#524124', '#524124', '#524124'],
['#adaa84', '#37382f', '#37382f', '#37382f', '#b2b08c', '#524124', '#524124', '#524124']],
"snowy taiga": [['#336600', '#f3f3f3', '#336600', '#e8e8e8', '#e6e6e6', '#e3e3e3', '#336600', '#336600'],
['#eeeeee', '#336600', '#336600', '#336600', '#e3e3e3', '#dddddd', '#c1c1c1', '#663300'],
['#d5d5d5', '#336600', '#336600', '#336600', '#f1f1f1', '#eaeaea', '#336600', '#ececec'],
['#e6e6e6', '#fefefe', '#663300', '#ececec', '#ededed', '#336600', '#336600', '#336600'],
['#f3f3f3', '#eeeeee', '#c6c6c6', '#336600', '#fafafa', '#336600', '#336600', '#336600'],
['#f5f5f5', '#e3e3e3', '#336600', '#336600', '#336600', '#e3e3e3', '#663300', '#eaeaea'],
['#ececec', '#e4e4e4', '#336600', '#336600', '#336600', '#dcdcdc', '#f9f9f9', '#336600'],
['#336600', '#336600', '#dfdfdf', '#663300', '#efefef', '#f0f0f0', '#336600', '#336600']],
"spruce-forest": [['#497038', '#286128', '#486b39', '#4e6d3c', '#263d26', '#263d26', '#263d26', '#4d7036'],
['#496b3c', '#4b693e', '#263d26', '#4d7036', '#263d26', '#263d26', '#263d26', '#4f6936'],
['#516a3b', '#4e713e', '#263d26', '#286128', '#4a6d37', '#23170a', '#4b6f3c', '#286128'],
['#4b6a37', '#263d26', '#263d26', '#263d26', '#4b6d3b', '#4b723e', '#4e6b38', '#4e703b'],
['#4b6b3b', '#263d26', '#263d26', '#263d26', '#4b6d40', '#286128', '#4d6d39', '#286128'],
['#4d6e35', '#4d6e3a', '#23170a', '#4a6e38', '#496d3c', '#4e6c37', '#4e6d3c', '#4c683d'],
['#286128', '#486f40', '#517138', '#516e3b', '#4c6f3e', '#263d26', '#286128', '#476a39'],
['#496c3a', '#4b6b38', '#286128', '#4b6f3c', '#286128', '#263d26', '#4f7032', '#506b3d']],
"stone beach": [['#5f7df1', '#6a86f2', '#cccccc', '#999999', '#cccccc', '#cccccc', '#999999', '#999999'],
['#617ff1', '#5474f0', '#5a79f1', '#5c7bf1', '#cccccc', '#5273f0', '#5273f0', '#5f7df1'],
['#4d6ff0', '#5273f0', '#cccccc', '#617ff1', '#5f7df1', '#4d6ff0', '#cccccc', '#5f7df1'],
['#5c7bf1', '#cccccc', '#999999', '#cccccc', '#6885f2', '#cccccc', '#999999', '#cccccc'],
['#cccccc', '#cccccc', '#999999', '#999999', '#cccccc', '#999999', '#999999', '#999999'],
['#708bf3', '#cccccc', '#999999', '#999999', '#999999', '#cccccc', '#5c7bf1', '#617ff1'],
['#cccccc', '#617ff1', '#5f7df1', '#5474f0', '#5273f0', '#cccccc', '#cccccc', '#cccccc'],
['#999999', '#cccccc', '#5273f0', '#cccccc', '#5f7df1', '#6784f2', '#cccccc', '#999999']],
"sunflowerPlains": [['#99bb95', '#a1c09d', '#ff99ff', '#9ebe9a', '#97ba93', '#94b890', '#8eb389', '#8db388'],
['#9bbc97', '#93b78e', '#96b992', '#97ba93', '#ffcc00', '#92b68d', '#92b68d', '#99bb95'],
['#8eb389', '#92b68d', '#99bb95', '#9bbc97', '#99bb95', '#8eb389', '#99bb95', '#99bb95'],
['#ff3300', '#a4c2a0', '#99bb95', '#9bbc97', '#9fbf9b', '#93b78e', '#99bb95', '#93b78e'],
['#a1c09d', '#9bbc97', '#94b890', '#ff00ff', '#93b78e', '#99bb95', '#9ebe9a', '#97ba93'],
['#a4c2a0', '#ffff66', '#9ebe9a', '#99bb95', '#99bb95', '#97ba93', '#ffffff', '#ffff66'],
['#9bbc97', '#9bbc97', '#99bb95', '#93b78e', '#92b68d', '#ffcc00', '#93b78e', '#a4c2a0'],
['#92b68d', '#92b68d', '#92b68d', '#97ba93', '#99bb95', '#9ebe9a', '#a1c09d', '#99bb95']],
"swamp": [['#5b9b53', '#6a86f2', '#6a86f2', '#6784f2', '#5c7bf1', '#5878f1', '#509948', '#529a47'],
['#617ff1', '#569c4b', '#589b50', '#599c51', '#5273f0', '#5273f0', '#5273f0', '#996600'],
['#4d6ff0', '#549a4c', '#5b9b53', '#5e9c56', '#5f7df1', '#4d6ff0', '#5f7df1', '#5f7df1'],
['#5c7bf1', '#708bf3', '#996600', '#617ff1', '#6885f2', '#569c4b', '#5b9b53', '#569c4b'],
['#6a86f2', '#617ff1', '#5878f1', '#5c7bf1', '#5474f0', '#5b9b53', '#609e58', '#599c51'],
['#708bf3', '#6381f2', '#609e58', '#5b9b53', '#5b9b53', '#5c7bf1', '#996600', '#617ff1'],
['#617ff1', '#617ff1', '#5b9b53', '#569c4b', '#549a4c', '#4468ef', '#5474f0', '#708bf3'],
['#549a4c', '#5273f0', '#5273f0', '#996600', '#5f7df1', '#6784f2', '#639e5b', '#5b9b53']],
"swamp m": [['#5b9b53', '#6a86f2', '#6a86f2', '#bd8249', '#b97d43', '#5878f1', '#509948', '#529a47'],
['#617ff1', '#569c4b', '#589b50', '#599c51', '#5273f0', '#5273f0', '#5273f0', '#996600'],
['#4d6ff0', '#549a4c', '#5b9b53', '#5e9c56', '#5f7df1', '#b07740', '#bb7f44', '#5f7df1'],
['#5c7bf1', '#708bf3', '#996600', '#617ff1', '#6885f2', '#569c4b', '#5b9b53', '#569c4b'],
['#6a86f2', '#bc8046', '#b87d43', '#b97d43', '#5474f0', '#5b9b53', '#609e58', '#599c51'],
['#708bf3', '#bd8248', '#609e58', '#5b9b53', '#5b9b53', '#5c7bf1', '#996600', '#617ff1'],
['#617ff1', '#617ff1', '#5b9b53', '#569c4b', '#549a4c', '#aa733e', '#b57b42', '#bf864e'],
['#549a4c', '#5273f0', '#5273f0', '#996600', '#5f7df1', '#bd8249', '#639e5b', '#5b9b53']],
"taiga": [['#336600', '#a1c09d', '#336600', '#9ebe9a', '#97ba93', '#94b890', '#336600', '#336600'],
['#9bbc97', '#336600', '#336600', '#336600', '#92b68d', '#92b68d', '#92b68d', '#663300'],
['#8eb389', '#336600', '#336600', '#336600', '#99bb95', '#8eb389', '#336600', '#99bb95'],
['#97ba93', '#a4c2a0', '#663300', '#9bbc97', '#9fbf9b', '#336600', '#336600', '#336600'],
['#a1c09d', '#9bbc97', '#94b890', '#97ba93', '#93b78e', '#336600', '#336600', '#336600'],
['#a4c2a0', '#9cbd98', '#336600', '#336600', '#336600', '#97ba93', '#663300', '#9bbc97'],
['#9bbc97', '#9bbc97', '#336600', '#336600', '#336600', '#88af83', '#93b78e', '#336600'],
['#336600', '#336600', '#92b68d', '#663300', '#99bb95', '#9ebe9a', '#336600', '#336600']],
"taigaHills": [['#336600', '#a1c09d', '#336600', '#9d9d9d', '#989898', '#94b890', '#336600', '#336600'],
['#9bbc97', '#336600', '#336600', '#336600', '#92b68d', '#92b68d', '#92b68d', '#663300'],
['#8eb389', '#336600', '#336600', '#336600', '#99bb95', '#909090', '#336600', '#99bb95'],
['#97ba93', '#a4c2a0', '#663300', '#9bbc97', '#9fbf9b', '#336600', '#336600', '#336600'],
['#a1c09d', '#9b9b9b', '#969696', '#336600', '#93b78e', '#336600', '#336600', '#336600'],
['#a4c2a0', '#9c9c9c', '#336600', '#336600', '#336600', '#97ba93', '#663300', '#9bbc97'],
['#9bbc97', '#9bbc97', '#336600', '#336600', '#336600', '#8c8c8c', '#949494', '#336600'],
['#336600', '#336600', '#92b68d', '#663300', '#99bb95', '#9d9d9d', '#336600', '#336600']],
"taigaM": [['#336600', '#a1c09d', '#336600', '#bd8249', '#b97d43', '#94b890', '#336600', '#336600'],
['#9bbc97', '#336600', '#336600', '#336600', '#92b68d', '#92b68d', '#92b68d', '#663300'],
['#8eb389', '#336600', '#336600', '#336600', '#99bb95', '#b07740', '#336600', '#99bb95'],
['#97ba93', '#a4c2a0', '#663300', '#9bbc97', '#9fbf9b', '#336600', '#336600', '#336600'],
['#a1c09d', '#bc8046', '#b87d43', '#b97d43', '#93b78e', '#336600', '#336600', '#336600'],
['#a4c2a0', '#bd8248', '#336600', '#336600', '#336600', '#97ba93', '#663300', '#9bbc97'],
['#9bbc97', '#9bbc97', '#336600', '#336600', '#336600', '#aa733e', '#b57b42', '#336600'],
['#336600', '#336600', '#92b68d', '#663300', '#99bb95', '#bd8249', '#336600', '#336600']],
"temperate-rainforest": [['#1e7e00', '#1e7e00', '#a1c09d', '#315a12', '#5c6d29', '#1e7e00', '#8eb389', '#1e7e00'],
['#a1864c', '#93b78e', '#96b992', '#97ba93', '#5c6d29', '#1e7e00', '#92b68d', '#99bb95'],
['#8eb389', '#92b68d', '#99bb95', '#9bbc97', '#1e7e00', '#1e7e00', '#1e7e00', '#99bb95'],
['#97ba93', '#315a12', '#315a12', '#315a12', '#1e7e00', '#1e7e00', '#1e7e00', '#93b78e'],
['#a1c09d', '#315a12', '#5c6d29', '#315a12', '#93b78e', '#a1864c', '#9ebe9a', '#97ba93'],
['#1e7e00', '#9cbd98', '#5c6d29', '#99bb95', '#99bb95', '#97ba93', '#97ba93', '#9bbc97'],
['#1e7e00', '#9bbc97', '#99bb95', '#93b78e', '#92b68d', '#88af83', '#93b78e', '#a4c2a0'],
['#1e7e00', '#1e7e00', '#92b68d', '#315a12', '#315a12', '#315a12', '#a1c09d', '#1e7e00']],
"thicket": [['#bfb790', '#c4bd99', '#c4bd99', '#c4bd99', '#beb68e', '#777213', '#777213', '#777213'],
['#c0b892', '#bbb289', '#beb68e', '#beb68e', '#bab188', '#bab188', '#bab188', '#bfb790'],
['#bab188', '#bab188', '#777213', '#c0b892', '#bfb790', '#bab188', '#bfb790', '#bfb790'],
['#beb68e', '#777213', '#777213', '#777213', '#c4bd99', '#bbb289', '#777213', '#bbb289'],
['#c4bd99', '#c0b892', '#bbb289', '#beb68e', '#bbb289', '#777213', '#777213', '#777213'],
['#c4bd99', '#777213', '#c4bd99', '#537713', '#537713', '#537713', '#beb68e', '#c0b892'],
['#777213', '#777213', '#777213', '#537713', '#537713', '#537713', '#bbb289', '#c4bd99'],
['#bab188', '#bab188', '#bab188', '#beb68e', '#777213', '#c4bd99', '#777213', '#bfb790']],
"timber": [['#b0bb95', '#b6c09d', '#b6c09d', '#b6c09d', '#6c9231', '#abb68d', '#a8b389', '#a8b389'],
['#b2bc97', '#6c9231', '#afba93', '#afba93', '#8f4a00', '#abb68d', '#abb68d', '#b0bb95'],
['#a8b389', '#6c9231', '#b0bb95', '#b2bc97', '#8f4a00', '#a8b389', '#6c9231', '#b0bb95'],
['#afba93', '#6c9231', '#b0bb95', '#b2bc97', '#b6c09d', '#abb68d', '#6c9231', '#abb68d'],
['#b6c09d', '#8f4a00', '#abb68d', '#6c9231', '#abb68d', '#b0bb95', '#6c9231', '#afba93'],
['#b6c09d', '#8f4a00', '#b6c09d', '#6c9231', '#b0bb95', '#afba93', '#8f4a00', '#b2bc97'],
['#b2bc97', '#b2bc97', '#b0bb95', '#8f4a00', '#6c9231', '#a8b389', '#8f4a00', '#b6c09d'],
['#abb68d', '#abb68d', '#abb68d', '#afba93', '#6c9231', '#b6c09d', '#b6c09d', '#b0bb95']],
"volcano": [['#ff6600', '#ff6600', '#5b5b5b', '#656565', '#626262', '#626262', '#5d5d5d', '#656565'],
['#5d5d5d', '#616161', '#5d5d5d', '#ff6600', '#616161', '#656565', '#5b5b5b', '#ff6600'],
['#656565', '#ff6600', '#ff6600', '#ffa200', '#5f5f5f', '#5b5b5b', '#ff6600', '#626262'],
['#616161', '#5d5d5d', '#ffa200', '#5d5d5d', '#616161', '#ff6600', '#656565', '#656565'],
['#5f5f5f', '#ff6600', '#5b5b5b', '#5f5f5f', '#ff6600', '#ffa200', '#ff6600', '#656565'],
['#656565', '#626262', '#616161', '#5f5f5f', '#5d5d5d', '#ff6600', '#656565', '#616161'],
['#5b5b5b', '#5b5b5b', '#ff6600', '#656565', '#ff6600', '#5b5b5b', '#5d5d5d', '#5b5b5b'],
['#5d5d5d', '#ff6600', '#ffa200', '#5f5f5f', '#626262', '#656565', '#656565', '#656565']],
"wasteland": [['#b2a69d', '#b8aca4', '#b8aca4', '#b6aaa2', '#937a67', '#aea097', '#ad9f96', '#937a67'],
['#b4a89f', '#aea097', '#b1a49b', '#937a67', '#937a67', '#937a67', '#ad9f96', '#b2a69d'],
['#ad9f96', '#ad9f96', '#b2a69d', '#b4a89f', '#937a67', '#ad9f96', '#b2a69d', '#b2a69d'],
['#b1a49b', '#b8aca4', '#937a67', '#b4a89f', '#b8aca4', '#aea097', '#b2a69d', '#aea097'],
['#b8aca4', '#b4a89f', '#937a67', '#b1a49b', '#aea097', '#b2a69d', '#b6aaa2', '#b1a49b'],
['#b8aca4', '#937a67', '#937a67', '#937a67', '#b2a69d', '#b1a49b', '#b1a49b', '#937a67'],
['#b4a89f', '#b4a89f', '#937a67', '#aea097', '#ad9f96', '#ad9f96', '#aea097', '#937a67'],
['#937a67', '#ad9f96', '#ad9f96', '#b1a49b', '#937a67', '#b6aaa2', '#937a67', '#937a67']]
			}
		,terrainSimpleTextures: { 
			//Automatically cached on startup
		}
	},

	//Figure out the map scale
	calcScale: function() {
		//scale down
		var ar = canvas.vars.c.width / canvas.vars.c.height;
		var scale = 1;
		if ( ar > 1 ) { 
			scale = canvas.vars.c.height / map.vars.viewArea.height;
		}
		else { 
			scale = canvas.vars.c.width / map.vars.viewArea.width;
		}
		map.vars.mapScale = scale;
	},
	
	//Resets the map
	reset: function() {
		canvas.clear();
		canvas.calcScale();
	},
	
	//If window is resized
	resize: function() {
		if ( canvas.vars.c ) {
			canvas.calcScale();
		
			canvas.vars.c.width = $(window).width();
			canvas.vars.c.height = $(window).height();
			
			canvas.vars.c_bg.width = $(window).width();
			canvas.vars.c_bg.height = $(window).height();
			
			
			canvas.reset();
			map.redraw();
			setTimeout(map.updateBGIncrementReset,100);
		}
	},

	//Initialize canvas
	init: function() {
		try {
			canvas.vars.c = document.getElementById("canvas");
			canvas.vars.ctx = canvas.vars.c.getContext("2d");
			canvas.vars.c_bg = document.getElementById("canvasbg");
			canvas.vars.ctx_bg = canvas.vars.c_bg.getContext("2d");
			
			if ( canvas.vars.ctx && canvas.vars.ctx_bg ) {
				canvas.resize();
				canvas.reset(); //Draw everything
				window.onresize = canvas.resize;
				canvas.vars.initialized = true;
				
				$("#canvas")
					.bind("mousewheel DOMMouseScroll",map.mouseWheel)
					.bind("mousedown",map.mouseDown)
					.bind("mouseup",map.mouseUp)
					.bind("mouseout",map.mouseOut)
					.bind("mousemove", map.mouseMove)
					.bind("dblclick",map.editPoint);
				
			} else {
			}
		}catch(e) {
			console.log("Error initializing canvas: " + e.message);
		}
		
		//Automatically average and determine average colors of textures
		var ex, ey, num, avg, sum, col;
		for(var tex in canvas.vars.terrainTexture) {
			num = 0;
			sum = [0,0,0];
			for(ey = 0; ey < 4 && ey < canvas.vars.terrainTexture[tex].length; ey++) {
				for( ex = 0; ex < 4 && ex < canvas.vars.terrainTexture[tex][ey].length; ex++) {
					col = canvas.color_to_array(canvas.vars.terrainTexture[tex][ey][ex]);
					sum[0] += col[0];
					sum[1] += col[1];
					sum[2] += col[2];
					num++;
				}
			}
			
			//Average
			sum[0] /= num;
			sum[1] /= num;
			sum[2] /= num;
			
			sum[0] = Math.floor(sum[0]);
			sum[1] = Math.floor(sum[1]);
			sum[2] = Math.floor(sum[2]);
			
			canvas.vars.terrainSimpleTextures[tex] = "rgb(" + sum.join(',') + ")";
		}
		
		//setInterval(canvas.updatePhotoViewer,500);
	},
	
	//Basic Draw Functions
	
	//Clear canvas
	clear: function() {
		if ( canvas.vars.initialized ) {
			canvas.vars.ctx.clearRect(0,0,canvas.vars.c.width,canvas.vars.c.height);
		}
	},
	
	//Draw a sqare
	square: function(x,y,s,col,bg) {
		
		if ( canvas.vars.initialized ) {
			if ( bg ) {
				canvas.vars.ctx_bg.fillStyle=col;
				canvas.vars.ctx_bg.fillRect(x,y,s,s);
			} else {
				canvas.vars.ctx.fillStyle=col;
				canvas.vars.ctx.fillRect(x,y,s,s);
			}
		}
	},
	
	//Draw text at a coordinate
	text: function(x,y,label) {
		if ( canvas.vars.initialized ) {
			canvas.vars.ctx.lineWidth=1;
			canvas.vars.ctx.fillStyle = "#ffffff";
			canvas.vars.ctx.lineStyle = "#ffffff";
			canvas.vars.ctx.font = "12pt courier";
			canvas.vars.ctx.fillText(label,x,y);
		}
	},
	
	//Draw a line from A to B
	line: function(x,y,x2,y2,col,thickness) {
		if ( canvas.vars.initialized ) {
			canvas.vars.ctx.lineWidth = thickness
			canvas.vars.ctx.strokeStyle = col;
			canvas.vars.ctx.beginPath();
			canvas.vars.ctx.moveTo(x,y);
			canvas.vars.ctx.lineTo(x2,y2);
			canvas.vars.ctx.stroke();
		}
	},
	
	//Draw dark background behind words
	textRect: function(x,y,words) {
		var width = words.length * 10;
		var height = 18;
		
		if ( canvas.vars.initialized ) {
				canvas.vars.ctx.fillStyle="rgba(0,0,0,0.7)";
				canvas.vars.ctx.fillRect(x-4,y-13,width+4,height);
		}
	},
		
	//Draw the crosshairs for origin
	drawOrigin: function(x,y,brief) {
		if ( brief ) {
			var cw2 = canvas.vars.c.width/2;
			var ch2 = canvas.vars.c.height/2;
		
			canvas.line(x-15,y,x+15,y,"red",1);
			canvas.line(x,y-15,x,y+15,"red",1);
		} else {
			canvas.line(0,y,canvas.vars.c.width,y,"blue",1);
			canvas.line(x,0,x,canvas.vars.c.height,"blue",1);			
		}
	},
	
	//Draw a grid of squares, align bottom, center middle
	squareGrid: function(x,y,squares) {

		for(var ey = 0; ey < squares.length; ey++) {
			var row = squares[ey];
			for(var ex = 0; ex < row.length; ex++) {
				if ( row[ex] ) {
					canvas.square(
						x - canvas.vars.scale * (ex - row.length/2),
						y + canvas.vars.scale * (ey - squares.length/2),
						canvas.vars.scale,row[ex]
					);
				}
			}
		}
	},

	
	//   |
	// ####
	// #  #
	// #  #
	// #  #
	// #### --
	drawPortal: function(x,y,label) {
		
		canvas.squareGrid(x,y,[
			["black","black","black","black"],
			["black","purple","purple","black"],
			["black","purple","purple","black"],
			["black","purple","purple","black"],
			["black","black","black","black"],
		]);
		if ( label ) {
			canvas.textRect((x+canvas.vars.scale*4),(y-canvas.vars.scale*2),label);
			canvas.text((x+canvas.vars.scale*4),(y-canvas.vars.scale*2),label);
		}
		
	},

	
	//  # 
	//  #
	//  ##
	//  ###
 	// ####
	drawCastle: function(x,y,label) {
		
		canvas.squareGrid(x,y,[
			[false,"#444444",false,false],
			[false,"#444444",false,false],
			[false,"#444444","#444444",false],
			[false,"#444444","#444444","#444444"],
			["#444444","#444444","#444444","#444444"],
		]);
		if ( label ) {
			canvas.textRect((x+canvas.vars.scale*4),(y-canvas.vars.scale*2),label);
			canvas.text((x+canvas.vars.scale*4),(y-canvas.vars.scale*2),label);
		}
		
	},	
	
	//  
	//   #
	//   #
	// # #
 	// #### #
	drawRuinBenign: function(x,y,label) {
		
		canvas.squareGrid(x,y,[
			[false,false,"#444477",false,false,false],
			[false,false,"#444477",false,false,false],
			[false,false,"#444477",false,false,false],
			["#444477",false,"#444477",false,false,"#444477"],
			["#444477","#444477","#444477","#444477",false,"#444477"],
		]);
		if ( label ) {
			canvas.textRect((x+canvas.vars.scale*6),(y-canvas.vars.scale*2),label);
			canvas.text((x+canvas.vars.scale*6),(y-canvas.vars.scale*2),label);
		}
		
	},	
	
	//  
	//   #
	//   #
	// # #
 	// #### #
	drawRuinHostile: function(x,y,label) {
		
		canvas.squareGrid(x,y,[
			[false,false,"#aa4444",false,false,false],
			[false,false,"#aa4444",false,false,false],
			[false,false,"#aa4444",false,false,false],
			["#aa4444",false,"#aa4444",false,false,"#aa4444"],
			["#aa4444","#aa4444","#aa4444","#aa4444",false,"#aa4444"],
		]);
		if ( label ) {
			canvas.textRect((x+canvas.vars.scale*6),(y-canvas.vars.scale*2),label);
			canvas.text((x+canvas.vars.scale*6),(y-canvas.vars.scale*2),label);
		}
		
	},
	
	// #  #
	//  ##
	// #  #
	drawInterest: function(x,y,label) {
		
		canvas.squareGrid(x,y,[
			["green",false,false,"green"],
			[false,"green","green",false],
			[false,"green","green",false],
			["green",false,false,"green"],
		]);
		if ( label ) {
			canvas.textRect((x+canvas.vars.scale*4),(y-canvas.vars.scale*1),label);
			canvas.text((x+canvas.vars.scale*4),(y-canvas.vars.scale*1),label);
		}
		
	},
	
	// ##
	// ##
	drawMinor: function(x,y,label) {
		
		canvas.squareGrid(x,y,[
			["blue","blue"],
			["blue","blue"]
		]);
		if ( label ) {
			canvas.textRect((x+canvas.vars.scale*3),(y-canvas.vars.scale*1),label);
			canvas.text((x+canvas.vars.scale*3),(y-canvas.vars.scale*1),label);
		}
		
	},
	
	// #
	drawSample: function(x,y) {
		
		canvas.squareGrid(x,y,[
			["rgba(50,50,50,0.3)"]
		]);
		
	},	
	
	//Background things
	
	//Draw solid background color
	drawBGBase: function(color) {
		if ( canvas.vars.ctx_bg ) {
			canvas.vars.ctx_bg.fillStyle=color;
			canvas.vars.ctx_bg.fillRect(0,0,canvas.vars.c_bg.width,canvas.vars.c_bg.height);
		}
	},
	
	//Drag colored blob
	dragBGblob: function(x,y,r,color) {
		var grd = canvas.vars.ctx_bg.createRadialGradient(r,y,r,x,y,r*1.5);
		grd.addColorStop(0,color);
		grd.addColorStop(1,"white");

		// Fill with gradient
		canvas.vars.ctx_bg.fillStyle=grd;
		canvas.vars.ctx_bg.fillRect(x-r/2,y-r/2,r,r);
	},
	
	color_to_array: function(code) {
		//console.log("----------");
		var m;
		if ( code ) {
			
			code = code.toLowerCase();
			//console.log("Got",code);
			//Detect rgba() 
			m = code.match(/^rgba\((\d+),(\d+),(\d+),/);
			if ( m ) {
				//console.log("first",m);
				return [parseInt(m[1]), parseInt(m[2]), parseInt(m[3])];
			} else { //Try rgb()
				
				m = code.match(/^rgb\((\d+),(\d+),(\d+)\)/);
				
				if ( m ) {
					//console.log("second",m);
					return [parseInt(m[1]), parseInt(m[2]), parseInt(m[3])];
				} else { //try hex
		
					code = code.replace(/[^0-9abcdef]+/,"");
					m = code.match(/^(..)(..)(..)$/);
						//console.log("third",m);
					if ( m ) {
						return [parseInt(m[1],16),parseInt(m[2],16),parseInt(m[3],16)];
					} else { //Match failed
						return [0,0,0];
					}
				}
			}
			
		} else {
			return [0,0,0];
		}
	},
	
	desaturate: function (r,g,b) {
		//console.log("first",r,g,b);
	  //var intensity = 0.3 * r + 0.59 * g + 0.11 * b;
	  var intensity = 0.3 * r + 0.59 * g + 0.11 * b;
	  var k = 1;
	  r = Math.floor(0.7 * (intensity * k + r * (1.1 - k)));
	  g = Math.floor(0.7 * (intensity * k + g * (1 - k)));
	  b = Math.floor(0.7 * (intensity * k + b * (1 - k)));
		//console.log("second",r,g,b);
	  return [r, g, b];
	},
	
	//Attempt to start a slideshow
	/*showPhotos: function(images) {
		px = map.vars.px;
		py = map.vars.py;
		canvas.vars.is_loading = true;
		canvas.vars.side = 0; //left
		if ( px > canvas.vars.c.width / 2 ) { canvas.vars.side = 1; /* right * / }

		for(var i = 0; i < images.length; i++) {
			$("#photoViewer").append("<img alt='' id='ph_" + i + "' src='" + images[i].file + "' style='opacity: 0;filter: alpha(opacity="+(i==0?'1':'0')+"); width:"+images[i].w+"px;height:"+images[i].h+"px' />");
		}
		
		$("#photoViewer img:first").clearQueue().fadeTo(333,1).addClass('current');
			canvas.vars.slideIndex = 0;
			canvas.vars.slideTID = setTimeout(canvas.photoSlidenext,4000);
		canvas.updatePhotoViewer();	
		canvas.photoSet(800,600);
	},
	
	photoSet: function(w,h) {
		
	
		var pw = canvas.vars.c.width/2 - 100;
		var ph = canvas.vars.c.height - 100;
		
		if ( w > pw ) { w = pw; }
		if ( h > ph ) { h = ph; }
	
		l = canvas.vars.side == 1 ? 50 : (canvas.vars.c.width/2 + 50);
		t = canvas.vars.c.height/2 - h/2;
	
	
		$("#photoViewer").css({width:w,height:h,left:l,top:t}).show();

		
	},
	
	updatePhotoViewer: function() {
		for(var i = 0; i < $("#photoViewer img").length; i++) {
			var vw = $("#photoViewer").width();
			var vh = $("#photoViewer").height();
			var arv = vw / vh;

			var photo = $("#ph_" + i);
			var ar = $(photo).width() / $(photo).height();
			if ( ar > arv ) {
				if ( $(photo).width() > vw ) {
					$(photo).width(vw);
				} 
			} else {
				if ( $(photo).height() > vh ) {
					$(photo).height(vh);
				}
			}
			
			if ( $(photo).width() < 5 || $(photo).height() < 5 ) {
				$(photo).css("left","0px");
				$(photo).css("top","0px");
			
			} else { 
				$(photo).css("left",((vw-$(photo).width())/2) + "px");
				$(photo).css("top",((vh-$(photo).height())/2) + "px");
			}
		}
	
	},
	
	hidePhotos: function() {
		$("#photoViewer").hide();
		$("#photoViewer").html("");
		clearTimeout(canvas.vars.slideTID);
	},
		
	photoSlidenext: function() {
		//console.log("photoSlidenext");
		$("#photoViewer img.current").clearQueue().fadeTo(333,0).removeClass('current');
		canvas.vars.slideIndex++;
		if ( canvas.vars.slideIndex >= $("#photoViewer img").length ) { canvas.vars.slideIndex = 0; }
		$("#photoViewer img:eq(" + canvas.vars.slideIndex + ")").clearQueue().fadeTo(333,1).addClass('current');
		canvas.vars.slideTID = setTimeout(canvas.photoSlidenext,4000);
	}*/
	
};




// Map management object
var map = {
	vars: {
		viewArea: {width:3000,height:3000}, //How many meters from origin are we mapping?
		viewCenter: {x: -1046, y: 852},			//What coordinate are we pointing at?
		world: ["overworld","netherworld"],	//Available worlds
		world_index: 0,						//Which world are we looking at?
		dragCount: 0,						//Increment which iteration of mouse-dragging we're on
		bgScale: cLoadInt('bgScale',50),		//Gow big are the bg square renderings?
		bgRenderLine: 0,					//Incremental rendering - starting
		fuzzy: cLoadInt('fuzzy',100),			//how many meters (game world) will borders be blended
		range: cLoadInt('range',1500),			//How many meters for a biome point to be relevant
		pwidth: cLoadInt('pwidth',3),			//Long render pixel width
		lineDelay: cLoadInt('lineDelay',20),	//Line render delay (ms)
		aa:	cLoadInt('aa',0),					//Anti-aliasing radius
		pointCache: false,					//Localized cache of biomes
		pointCacheLim: 1500,				//How many pixels before the pointCache resets,
		origin: {x:-1046,z:852},
		newline: true,
		lastCoord: {x:0,z:0}				//Last mouse coordinates in world
	},

	
	//Preprocess data - add in inferences
	peprocessData: function() {
				
		//Determine terrain points
		data.terrain = {overworld:[]};
		for(var i in data.overworld) {
			var entry = data.overworld[i];
			if ( entry.biome ) {
				//Figure out which other points are "within range", for streamlining
				data.terrain.overworld.push({x: entry.coords.x, z: entry.coords.z, type: entry.biome});
			}
		}
		
		//Determine interactable entries
		data.interactive = {overworld:[],netherworld:[]};
		for(var i in data.overworld) {
			var entry = data.overworld[i];
			if ( entry.photos && entry.photos.length > 0 ) {
				data.interactive.overworld.push(entry);
			}
		}
		for(var i in data.netherworld) {
			var entry = data.netherworld[i];
			if ( entry.photos && entry.photos.length > 0 ) {
				data.interactive.netherworld.push(entry);
			}
		}		
		
		//y-sort points
		var temp = [];
		var flag = true;
		while(flag) {
			var min = 1000000000;
			var mini = -1;
			var cnt = 0;
			for(var i2 = 0; i2 < data.overworld.length; i2++) {
				if ( !data.overworld[i2].scanned && data.overworld[i2].coords.z < min ) {
					min = data.overworld[i2].coords.z;
					mini = i2;
				}
				if ( data.overworld[i2].scanned ) { cnt++; }
			}
			if ( mini >= 0 ) { 
				temp.push(data.overworld[mini]);
				data.overworld[mini].scanned = true;
			} 
			if ( cnt >= data.overworld.length) { flag = false; }
		}
		data.overworld = temp; 
		
		
	},	
	
	//Redraw map from data
	redraw: function(omitMinor) {
		canvas.reset();
		var netherScale = (map.vars.world_index == 1 ? 1/8 : 1);
		//Draw origin
			
		var coords = map.map_to_canvas(map.vars.origin.x,map.vars.origin.z);
		var ox = coords.x;
		var oy = coords.y;	
			
		var zoom = ((map.vars.viewArea.width + map.vars.viewArea.height)/2);
		
		var textLevel = 1;
		if ( zoom > 3000 ) { textLevel = 1; }
		else if ( zoom > 2200 ) { textLevel = 2; }
		else if ( zoom > 600 ) { textLevel = 3; }
			
		canvas.drawOrigin(ox,oy);
		
		coords = map.map_to_canvas(0,0);
		canvas.drawOrigin(coords.x,coords.y,true);
				
		//Draw objects
		for(var i in data[map.vars.world[map.vars.world_index]]) {
			var entry = data[map.vars.world[map.vars.world_index]][i];
			
			//Determine location
				//... raw position
			
				var coords = map.map_to_canvas(entry.coords.x/netherScale,entry.coords.z/netherScale);
				var x = coords.x;
				var y = coords.y;
		
			var hasPortal = entry.portal == "1" ? " [P]" : "";
			switch(entry.type) {
				case "castle":
					canvas.drawCastle(x,y,(entry.name ? entry.name + hasPortal : "Castle" + hasPortal));
				break;
				case "ruinb":
					if ( !omitMinor ) {
						canvas.drawRuinBenign(x,y,(entry.name && textLevel >= 3 ? entry.name + hasPortal : false));
					}
				break;
				case "ruinh":
					if ( !omitMinor ) {
						canvas.drawRuinHostile(x,y,(entry.name && textLevel >= 3 ? entry.name + hasPortal : false));
					}
				break;
				case "portal":
					if ( !entry.ownedBy ) {
						canvas.drawPortal(x,y,textLevel >= 2 ? (entry.name ? entry.name : "Portal") : false);
					}
				break;
				case "minor":
					if ( !omitMinor ) {
						if ( entry.sample ) {
							canvas.drawSample(x,y);
						} else {
							canvas.drawMinor(x,y,textLevel >= 3 ? (entry.name ? entry.name : "Portal") : false);
						}
					}
				break;
				default:
					canvas.drawInterest(x,y,textLevel >= 2 ? (entry.name ? entry.name + hasPortal : "Castle" + hasPortal) : false);
				break;
			}
			
		}	

		//Draw players
		/*if ( !omitMinor ) {
			if ( map.vars.players ) {
				var player;
				for(var p in map.vars.players) {
					player = map.vars.players[p];
					if ( map.vars.world_index == player.world ) {
						var coords = map.map_to_canvas(player.x/netherScale,player.z/netherScale);
						canvas.textRect(coords.x+8,coords.y+15,p.substr(0,2).toUpperCase()+".");
						canvas.square(coords.x,coords.y,3,"#ff0000");
						canvas.text(coords.x+8,coords.y+15,p.substr(0,2).toUpperCase()+".");
					}
				}
			}
		}*/
		
		//Drag BG
		clearTimeout(map.vars.update_timer_id);
		if ( map.vars.world_index == 0 ) {
			canvas.drawBGBase("black");//"#aaffae");

			map.drawBGTerrain();
			
			
			map.updateBGIncrementReset();
		} else {
			canvas.drawBGBase("#fdc8ff");
		}
		
		
	},
	
	//Look at preprocessed terrain and figure out terrain
	//Experimental main version
	drawBGTerrain: function(spre) {
		
		
		var s = spre ? spre : map.vars.bgScale;

		var coords,col,e,dist,min,min_index,biome;
		for(var ex = 0; ex < canvas.vars.c_bg.width ; ex += s) {
			for(var ey = 0; ey < canvas.vars.c_bg.height; ey += s) {
				
				col = [170,255,174];
				coords = map.canvas_to_map(ex,ey);
				
				//Determine which terrain point is closest
				min = 100000000;
				min_index = -1;
				
				for(var i = 0; i < data.terrain.overworld.length; i++) {
					e = data.terrain.overworld[i];
					dist = map.distSqr(e.x,e.z,coords.x,coords.y);
					//console.log(i,dist,min);
					if ( dist < map.vars.range * map.vars.range && dist < min ) {
						min = dist;
						min_index = i;
						biome = e.type;
					}
				}
				
				//console.log(min,min_index,biome);
				
				if ( min_index >= 0 ) {
					
					if ( canvas.vars.terrainSimpleTextures[biome] ) {
						canvas.square(ex,ey,s,canvas.vars.terrainSimpleTextures[biome],true);	
					} else { //undefined
						canvas.square(ex,ey,s,"#d4ff88",true);	
					}
					
				}
			}
		}
		
	},
	
	
	//Look at preprocessed terrain and figure out terrain
	//Main renderer
	drawBGTerrainLine_old: function(line) {
	
		var mr2 = map.vars.range * map.vars.range;
		
		var s = map.vars.pwidth;
		var coords,col,e,dist,min,min_index,biome;
		for(var ex = 0; ex < canvas.vars.c_bg.width ; ex += s) {
			ey = line;	
				
				//Anti-aliasing
					coords = map.canvas_to_map(ex,ey);
				
					//Determine which terrain point is closest
					min = 10000000000;
					min_index = -1;
					
					var r = map.vars.fuzzy;
					for(var i = 0; i < data.terrain.overworld.length; i++) {
						e = data.terrain.overworld[i];
						dist = map.distSqr(e.x,e.z,coords.x,coords.y);
						//console.log(i,dist,min);
						
						//var n = map.vars.perlin.noise(ex/10,ey/10,0);
						
						var rand = Math.random() * map.vars.fuzzy;

						if ( dist < mr2 && dist + rand < min) {
							min = dist;
							min_index = i;
							biome = e.type;
						}
					}
					
					//console.log(min,min_index,biome);
					var col;
					if ( min_index >= 0 ) {
						//Color square

						/* Todo - maybe phase out switch statement entirely */
						switch(biome) {
							default:
								if ( canvas.vars.terrainTexture[biome] ) {
									col = pick(canvas.vars.terrainTexture[biome],Math.round((ex)/s),Math.round((ey)/s));
								} else {
									//col = pick(canvas.vars.terrainTexture.plains,Math.round((ex)/s),Math.round((ey)/s));	
									col = "#d4ff88";	
								}
							break;
						}
					} else {
						col = "#111111";	
					}
					
				var c = canvas.color_to_array(col);
				
				if ( map.vars.world_index == 1 ) {	
					c = canvas.desaturate(c[0],c[1],c[2]);
				}

				col = "rgb(" + c.join(',') + ")";

				col = map.drawSection(coords,col);
				col = map.drawClaims(coords,col);
				
				canvas.square(ex,ey,s,col,true);
		}
	},
	
	
	
	//Look at preprocessed terrain and figure out terrain
	//Anti-Alias version
	drawBGTerrainLine: function(line) {
		var s = map.vars.pwidth;
		var coords,col,e,dist,min,min_index,biome;
		for(var ex = 0; ex < canvas.vars.c_bg.width ; ex += s) {
			ey = line;	
				cols = [];
				
				//Anti-aliasing
				for(var ix = -map.vars.aa; ix < map.vars.aa; ix++) {
				for(var iy = -map.vars.aa; iy < map.vars.aa; iy++) {
					coords = map.canvas_to_map(ex+ix,ey+iy);
				
					//Determine which terrain point is closest
					min = 10000000000;
					min_index = -1;
					
					var r = map.vars.fuzzy;
					for(var i = 0; i < data.terrain.overworld.length; i++) {
						e = data.terrain.overworld[i];
						dist = map.distSqr(e.x,e.z,coords.x,coords.y);
						//console.log(i,dist,min);
						var rand = (Math.random() * r*r) - (r*r/4);
						if ( dist < map.vars.range * map.vars.range && dist + rand < min) {
							min = dist;
							min_index = i;
							biome = e.type;
						}
					}
					
					//console.log(min,min_index,biome);
					var col;
					if ( min_index >= 0 ) {
						//Color square

						/* Todo - maybe phase out switch statement entirely */
						if ( canvas.vars.terrainTexture[biome] ) {
							col = pick(canvas.vars.terrainTexture[biome],Math.round((ex)/s),Math.round((ey)/s));
						} else {
							//col = pick(canvas.vars.terrainTexture.plains,Math.round((ex)/s),Math.round((ey)/s));	
							col = "#d4ff88";	
						}
						
					} else {
						col = "#111111";	
					}
				
				    
				
					cols.push(canvas.color_to_array(col));
				
				}}
				
				//Average colors
				//console.log(cols);
				var newcol = [0,0,0];
				for(var i = 0; i < cols.length; i++) {
					newcol[0] += cols[i][0];
					newcol[1] += cols[i][1];
					newcol[2] += cols[i][2];
				}
				newcol[0] = Math.floor(newcol[0] / cols.length);
				newcol[1] = Math.floor(newcol[1] / cols.length);
				newcol[2] = Math.floor(newcol[2] / cols.length);
				
				if ( map.vars.world_index == 1 ) {	
					var c = canvas.desaturate(newcol[0],newcol[1],newcol[2]);
					newcol = c;
				}
				
				newcol = map.drawSection(coords,newcol);	
				newcol = map.drawClaims(coords,newcol);
				
				canvas.square(ex,ey,s,"rgb(" + newcol.join(',') + ")",true);
		}
	},
	
	//Draw the region sections
	drawSection: function(coords,col) {
		var type = typeof(col);
		var c = col;
		if ( type == "string" ) {
		    c = canvas.color_to_array(c);
		}
		
		var pi2 = Math.PI*2;
		
		//map.vars.origin.x,map.vars.origin.z

		//Calculate the coord range and angle
		var dx = coords.x - map.vars.origin.x;
		var dy = coords.y - map.vars.origin.z;
		var dx2 = dx * dx;
		var dy2 = dy * dy;
		var angle = Math.atan2(dy,dx);
		var dist = Math.sqrt(dx2 + dy2)
		
		if ( angle < 0 ) { angle += pi2; }
		angle = angle % pi2; 
		
		var flag = false;
		//if (dist > 50 && dist < 250) { flag = 1; }
		if (dist > 2500 && dist < 30000000) { flag = 2; }
		
		//First, check distances
		var offset = 0;//Math.PI / 8;
		if ( flag ) { 
		    var dt, df;
		
		    //Second, check spokes
			for(var r = offset; r < pi2 + offset; r += pi2 / 8) {
				dt = r - angle; //angle difference
				df = dist * Math.sin(dt); // distance from spoke

				if ( Math.abs(df) > (flag == 1 ? 7 : 200) ) {
					
					var blend = 20;
					//gradient away
					//blend = map.blendAverage(blend,dist,[100,500,1500,700]);
					
				    //change color
				    c[0] = Math.floor((255 + c[0]*blend) / (blend+1));
				    c[1] = Math.floor((255 + c[1]*blend) / (blend+1));
				    c[2] = Math.floor((255 + c[2]*blend) / (blend+1));

				} else {
				    return col;
				}
			}
		
		} else {
			return col;
		}
		
		
		
		if ( type == "string" ) {
		    c = "rgb(" + c.join(',') + ")";
		}
		
		return c;
	},
	//Draw the region sections
	drawClaims: function(coords,col) {
	
		var test =  Math.random()*10000 < 10;
		
	
		var type = typeof(col);
		var c = col;
		if ( type == "string" ) {
		    c = canvas.color_to_array(c);
		}

		//Calculate the coord range and angle
		var dx,dz,c,dist,r2;
		var pc;
		var skip = false;
		for(var i = 0; i < map.vars.claims.nodes.length; i++) {
			if ( !skip ) {
				
				claim = map.vars.claims.nodes[i].node;
				
				dx = coords.x - claim.x;
				dz = coords.y - claim.z;
				dist = dx*dx + dz*dz;
				r2 = claim.r*claim.r;
				
				if ( dist < r2*0.90) {
					/*pc = map.vars.playerColors[claim.Player];
					var blend = 2;
					//change color
					c[0] = Math.floor((0 + c[0]*blend) / (blend+1));
					c[1] = Math.floor((0 + c[1]*blend) / (blend+1));
					c[2] = Math.floor((0 + c[2]*blend) / (blend+1));*/
					skip = true;
				} else if ( dist < r2) {
					pc = map.vars.playerColors[claim.Player];
					var blend = 1;
					//change color
					c[0] = Math.floor((pc[0] + c[0]*blend) / (blend+1));
					c[1] = Math.floor((pc[1] + c[1]*blend) / (blend+1));
					c[2] = Math.floor((pc[2] + c[2]*blend) / (blend+1));
					skip = true;
				}
			}
		}		
		
		
		//try {
		if ( type == "string" ) {
		    c = "rgb(" + c.join(',') + ")";
		}
		//}catch(e) { console.log(c); }
		
		return c;
	},
	
	//increase blend facter the further we are from these values
	blendAverage: function(blend,dist,dists) {
		
		var min = 1000000;
		for(var i in dists) {
			var v = Math.abs(dists[i]-dist);
			if ( v < min ) { min = v; }			
		}
		
		return (blend + (v / 10)) / 2;		
	},

	//Look at preprocessed terrain and figure out terrain
	//* Currently Unused
	drawBGTerrainLine2: function(line,rows) {
		map.vars.pointCache = false;
		map.vars.pointCachePx = 0;
		
	
		var s = map.vars.pwidth;
		var pCPi = s/map.vars.mapScale; //s converted to pointCachePx increment
		var coords,col,e,dist,min,min_index,biome;
		for(var ex = 0; ex < canvas.vars.c_bg.width ; ex += s) {
		
			//Determine which terrain point is closest
			min = 10000000000;
			min_index = -1;
			
			
			if ( map.vars.pointCache == false || map.vars.pointCachePx > map.vars.pointCacheLim ) {
				coords = map.canvas_to_map(ex,line);
				map.vars.pointCache = [];
				
				for(var i = 0; i < data.terrain.overworld.length; i++) {
					e = data.terrain.overworld[i];
				
					//Remember
					if ( 
						 e.x > coords.x - map.vars.range &&
						 e.x < coords.x + map.vars.range + map.vars.pointCacheLim &&
						 e.z > coords.y - map.vars.range &&
						 e.z < coords.y + map.vars.range + (pCPi * rows) ) 
					{
						map.vars.pointCache.push(e);
					}
					
				}
				
				map.vars.pointCachePx = 0;
				
			} 
		
			for(var ey = line; ey < canvas.vars.c_bg.height && ey < line + s*rows; ey += s) {
				coords = map.canvas_to_map(ex,ey);
				
				//Determine which terrain point is closest
				min = 10000000000;
				min_index = -1;
				
				for(var i = 0; i < map.vars.pointCache.length; i++) {
					e = map.vars.pointCache[i];
					dist = map.distSqr(e.x,e.z,coords.x,coords.y);
				
					if ( dist < map.vars.range * map.vars.range && dist < min) {
						min = dist;
						min_index = i;
						biome = e.type;
					}
				}
				
				
				//console.log(min,min_index,biome);
				var col;
				if ( min_index >= 0 ) {
					//Color square

					/* Todo - maybe phase out switch statement entirely */
					if ( canvas.vars.terrainTexture[biome] ) {
						col = pick(canvas.vars.terrainTexture[biome],Math.round((ex)/s),Math.round((ey)/s));
					} else {
						col = "#d4ff88";	
					}
					
				} else {
					col = "#111111";	
				}
				
				
				var c = canvas.color_to_array(col);
				
				if ( map.vars.world_index == 1 ) {	
					c = canvas.desaturate(c[0],c[1],c[2]);
				}

				col = "rgb(" + c.join(',') + ")";

				col = map.drawSection(coords,col);
				col = map.drawClaims(coords,col);
				
				canvas.square(ex,ey,s,col,true);
			}
			
			map.vars.pointCachePx += pCPi;
		}
	},
	
	//ResetUpdate
	updateBGIncrementReset: function() {
		map.vars.bgRenderLine = 0;
		clearTimeout(map.vars.update_timer_id);
		if ( !map.vars.isDragging ) {
			map.vars.update_timer_id = setTimeout(map.updateBgIncrementally,map.vars.lineDelay);
		}
	},
	
	//Incrementally update background if not moving
	updateBgIncrementally: function() {
		var newLineNum = 30;
		
		if (map.vars.aa > 0 ) {
			map.drawBGTerrainLine(map.vars.bgRenderLine);
		} else {
			if ( map.vars.newline ) {
				map.drawBGTerrainLine2(map.vars.bgRenderLine,newLineNum);		
			} else {
				map.drawBGTerrainLine_old(map.vars.bgRenderLine);		
			
			}
		}
		
		if ( map.vars.newline ) {
			map.vars.bgRenderLine += map.vars.pwidth * newLineNum;
		} else {
			map.vars.bgRenderLine += map.vars.pwidth;
		}
		
		if ( map.vars.bgRenderLine < canvas.vars.c_bg.height  ) { 
			map.vars.update_timer_id = setTimeout(map.updateBgIncrementally,map.vars.lineDelay);
		}
		
	},
	
	//Reset map to default
	reset: function() {
		map.vars.viewArea = {width: 5000, height:5000};
		map.vars.viewCenter = {x:0, y:0};
		map.redraw();
		map.vars.rangePixels = map.vars.range * map.vars.mapScale;		
	},
	
	//Toggles whether map is viewing overworld or netherworld
	toggleWorld: function() {
		if ( map.vars.world_index == 0 ) {
			map.vars.world_index = 1;
			
			$("#toggleButton").html("Switch to Overworld");
		} else {
			map.vars.world_index = 0;
			
			$("#toggleButton").html("Switch to Netherworld");
		}
		if ( map.vars.world_index == 0 ) {
			map.addHotspots();
		}
		map.redraw();
		setTimeout(map.updateBGIncrementReset,100);

	},
	
	//Zooom in/out
	zoomIn: function() {
		map.vars.viewArea.width *= 0.75;
		map.vars.viewArea.height *= 0.75;
		map.redraw();
		map.updateBGIncrementReset();
		$("#hovers").html("");
		map.addHotspots();
		map.vars.rangePixels = map.vars.range * map.vars.mapScale;
	},
	zoomOut: function() {
		map.vars.viewArea.width *= 1.25;
		map.vars.viewArea.height *= 1.25;
		map.redraw();	
		map.updateBGIncrementReset();
		$("#hovers").html("");
		map.addHotspots();
		map.vars.rangePixels = map.vars.range * map.vars.mapScale;
	},
	
	//Mouse wheel zoom in/out
	mouseWheel: function(event) {
	
		event.preventDefault();
		//var delta = event.wheelDelta || event.detail < 0 || event.originalEvent.detail < 0 ;
		//console.log(event.wheelDelta , event.detail, event.originalEvent.detail);
		
		var delta = 0;
        if (!event) /* For IE. */
                event = window.event;
				
        if (event.wheelDelta) { /* IE/Opera. */
                delta = event.wheelDelta/120;
        } else if (event.detail) { /** Mozilla case. */
                /** In Mozilla, sign of delta is different than in IE.
                 * Also, delta is multiple of 3.
                 */
                delta = -event.detail/3;
        } else if ( event.originalEvent.detail ) {
			delta = -event.originalEvent.detail/3;
		} else if ( event.originalEvent.wheelDelta ) {
			delta = event.originalEvent.wheelDelta/3;
		}
	
	
	//for (var i in event.originalEvent) { console.log(i + ": " + event.originalEvent[i]); }
		
		if ( delta > 0 ) {
			map.zoomIn();
		} else {
			map.zoomOut();
		}

	},
	
	//Mouse down
	mouseDown: function(e) {
		clearTimeout(map.vars.update_timer_id);
		map.vars.isDragging = true;
		map.vars.startX = e.pageX ? e.pageX : e.screenX;
		map.vars.startY = e.pageY ? e.pageY : e.screenY;
		map.vars.viewStart = {x:map.vars.viewCenter.x, y:map.vars.viewCenter.y};
		$("#hovers").html("");
		map.vars.dragCount = 0;
	},
	//Mouse out
	mouseOut: function(e) {
		map.vars.isDragging = false;
	},
	//Mouse Up
	mouseUp: function(e) {
		map.vars.isDragging = false;
		map.vars.bgScaleInc = 30;
		map.redraw();	
		map.updateBGIncrementReset();
		//map.addHotspots();
		
		var dx = px - map.vars.startX;
		var dy = py - map.vars.startY;
		
		map.vars.viewCenter.x = map.vars.viewStart.x - dx/map.vars.mapScale;
		map.vars.viewCenter.y = map.vars.viewStart.y - dy/map.vars.mapScale;
	},
	
	addHotspots: function() {
		return; //Currently disabled
	
		for(var i = 0; i < data.interactive[map.vars.world[map.vars.world_index]].length; i++) {
			var entry = data.interactive[map.vars.world[map.vars.world_index]][i];
			var coords = map.map_to_canvas(entry.coords.x,entry.coords.z);
			var entries = [];
			for(var i2 = 0; i2 < entry.photos.length; i2++) {
				entries.push("{file:'" + entry.photos[i2].file + "',w:'" + entry.photos[i2].w + "',h:'" + entry.photos[i2].h + "'}");
			}
			var photos = entries.join(", "); 
			$("#hovers").append("<div class='hover' style=\"left:"+(coords.x-10)+"px;top:"+(coords.y-10)+"px\" onmouseover=\"canvas.showPhotos(["+photos+"])\" onmouseout=\"canvas.hidePhotos()\"><!--e--></div></div>");
		}
	},
	
	
	//Mouse move
	mouseMove: function(e) {
		
		e.preventDefault();
		var px =  (e.pageX ? e.pageX : e.screenX) - 8;
		var py =  (e.pageY ? e.pageY : e.screenY) - 8;
		
		
		if ( map.vars.isDragging ) {
			map.vars.dragCount++;
			if ( map.vars.dragCount % 2 == 0 ) { //Give comp some breathing room
				var dx = px - map.vars.startX;
				var dy = py - map.vars.startY;
				
				map.vars.viewCenter.x = map.vars.viewStart.x - dx/map.vars.mapScale;
				map.vars.viewCenter.y = map.vars.viewStart.y - dy/map.vars.mapScale;
			}
			
			//Disable update-over-time
			if ( map.vars.update_timer_id ) {
				clearTimeout(map.vars.update_timer_id);
				map.vars.update_timer_id = false;
				//canvas.hidePhotos();
			}
		}

		
		map.udpateCursorPosition(px,py);
		map.vars.px = px;
		map.vars.py = py;
	
	},
	
	//Object is interacted with
	/*mouseObjectInteract: function() {
		//console.log(map.vars.mouseObject);
		map.vars.mouseObjectTID = false;
		
		canvas.showPhotos(map.vars.mouseObject.photos,map.vars.px,map.vars.py);
		
	},*/

	
	//If mouse dragging, update map position
	updateMapCycle: function() {
		if ( map.vars.isDragging ) {
			map.redraw(true);	
		}
	},
	
	//Update the display of the cursor coordinates on the bottom-right
	udpateCursorPosition: function(x,y) {
		var netherScale = (map.vars.world_index == 1 ? 1/8 : 1);
		//Offset from center
		var coords = map.canvas_to_map(x,y);
		x = coords.x*netherScale;
		y = coords.y*netherScale;
		map.vars.lastCoord = {x:x,z:y};

		$("#xpos").html("X: " + Math.round(x));
		$("#zpos").html("Z: " + Math.round(y));
		
		var claim = map.findClaim(x/netherScale,y/netherScale);
		if ( claim ) {
			$("#biome").html(claim.title + " (" + claim.Player + ")");
		} else {
		
			//Look up biome
			var biome = map.findClosestBiome(x/netherScale,y/netherScale);
			$("#biome").html(biome ? (labels[biome] ? labels[biome] : biome) : '----');
		}
	},
	
	findClaim: function(x,y) {
		//Look up claim
		//Calculate the coord range and angle
		var dx,dz,c,dist,r2;
		var pc;
		for(var i = 0; i < map.vars.claims.nodes.length; i++) {
			claim = map.vars.claims.nodes[i].node;
			
			dx = x - claim.x;
			dz = y - claim.z;
			
			if ( dx*dx + dz*dz < claim.r*claim.r) {
				return claim;
			}
		}
	
	},
	
	findClosestBiome: function(x, y) {
		
		//Determine which terrain point is closest
		var min = 10000000000;
		var min_index = -1;
		
		var r = map.vars.fuzzy;
		for(var i = 0; i < data.terrain.overworld.length; i++) {
			e = data.terrain.overworld[i];
			
			dist = map.distSqr(e.x,e.z,x,y);
			if ( dist < map.vars.range * map.vars.range && dist < min) {
				min = dist;
				min_index = i;
				biome = e.type;
			}
		}
		
		return min_index >= 0 ? biome : false;
		
	},
	
	//Interpolate between two values
	interp: function(x1,y1,x2,y2,x) {
		var dx = x2-x1;
		var dy = y2-y1;
		var angle = Math.atan2(dy,dx);
		var dist = Math.sqrt(dx*dx + dy*dy);
		var ratio = (x2 - x) / (x2 - x1);
		return y1 + Math.sin(angle) * ratio * dist;
	},
	
	//Convert map coordinates to canvas
	map_to_canvas: function(x,y) {
	
		x -= (map.vars.viewCenter.x);
		y -= (map.vars.viewCenter.y);	
		
		x *= map.vars.mapScale;
		y *= map.vars.mapScale;
		
		x += (canvas.vars.c.width/2);
		y += (canvas.vars.c.height/2);
		
		return {x: x, y: y};
	},
	
	//Convert canvas coordinates to map
	canvas_to_map: function(x,y) {
		x -= (canvas.vars.c.width/2);
		y -= (canvas.vars.c.height/2);
		
		x /= map.vars.mapScale;
		y /= map.vars.mapScale;
	
		x += (map.vars.viewCenter.x);
		y += (map.vars.viewCenter.y);

		return {x: x, y: y};		
	},
	
	//Return distance-squared between two coordinates
	distSqr: function(x1,y1,x2,y2) {
		var dx = x2 - x1;
		var dy = y2 - y1;
		return dx*dx + dy*dy;
	},
	
	init: function() {
		//Fill in the gaps of aliases
		for(var i in canvas.vars.terrainAliases) {
			if ( !canvas.vars.terrainTexture[i] && canvas.vars.terrainTexture[canvas.vars.terrainAliases[i]]) {
				canvas.vars.terrainTexture[i] = canvas.vars.terrainTexture[canvas.vars.terrainAliases[i]];
			}
		}
	
		//Get claims
		var colors = ["#fff000","#ff00ff","#0f00ff","#f0ff0f","#00ff00","#0000ff","#ff0000","#00ffff"];
		map.vars.playerColors = {};
		map.vars.playerColorIndex = 0;
		
		//load claims
		$.getJSON("sites/default/files/claims.json",{r:Math.random()},function(data2) {
			map.peprocessData();
			
			//Preprocess data
			map.vars.claims = data2;
			//try {
				for(var i = 0; i < map.vars.claims.nodes.length; i++) {
					c = map.vars.claims.nodes[i].node;
					
					var m = c.Coordinates.match(/^([-.0-9]+),([-.0-9]+)$/);
					if ( m ) {
						map.vars.claims.nodes[i].node.x = Number(m[1]);
						map.vars.claims.nodes[i].node.z = Number(m[2]);
					} else {
						map.vars.claims.nodes[i].node.x = -100000000;
						map.vars.claims.nodes[i].node.z = -100000000;
					}
					map.vars.claims.nodes[i].node.r = Number(map.vars.claims.nodes[i].node.Radius);
					
					if ( !map.vars.playerColors[c.Player] ) {
						map.vars.playerColors[c.Player] = canvas.color_to_array(colors[map.vars.playerColorIndex]);
						map.vars.playerColorIndex++;
					}
					
					if ( c.Biome ) {
						data.terrain.overworld.push({type:c.Biome,x:c.x,z:c.z});
					}
				}
			//}catch(e) { }
			
			
			canvas.init();
			map.redraw();
			setInterval(map.updateMapCycle,30);
			map.vars.rangePixels = map.vars.range * map.vars.mapScale;
			map.updateBGIncrementReset();
			
			
			
			//Setup option values
			$("#var_range").val(map.vars.range);
			$("#var_pwidth").val(map.vars.pwidth);
			$("#var_fuzzy").val(map.vars.fuzzy);
			$("#var_lineDelay").val(map.vars.lineDelay);
			$("#var_aa").val(map.vars.aa);
			//map.addHotspots();
	
	
		});
		
		setInterval(map.updatePlayers,60000);
		map.updatePlayers();
	},
	
	updatePlayers: function() {
		//load players
		//$.getJSON("sites/default/files/players.json",{r:Math.random()},function(players) {
		//	map.vars.players = players;	
		//	map.redraw();
		//});
	
	},
	
	updateVar: function(name,value,type) {
		if ( type == "uint_1" ) { 
			value = Math.floor(value);
			if ( value < 1 ) { value = 1; }
		}
		map.vars[name] = value;
		setCookie(name,value,3000);
		map.redraw();
	
	},
	
	editPoint: function() {
		var range = 25/map.vars.mapScale;
		var rangeSqr = range*range;
		var x = map.vars.lastCoord.x;
		var z = map.vars.lastCoord.z;
		//alert("clicked " + Math.round(map.vars.lastCoord.x) + ", " + Math.round(map.vars.lastCoord.z) + " > " + range);
		
		var nid = false;
		/*
			biome: "plains"
			coords: Object
			name: "Plains 19"
			nid: "695"
			photos: Array[0]
			portal: "0"
			sample: true
			scanned: true
			type: "minor"
		*/
		
		if ( map.vars.world_index == 0 ) { //overworld
			var dx, dy;
			for(var i = 0; i < data.overworld.length; i++) {
				dx = data.overworld[i].coords.x - x;
				dy = data.overworld[i].coords.z - z;
				if ( dx*dx + dy*dy < rangeSqr ) {
					window.open("/node/" + data.overworld[i].nid + "/edit",'_blank');
					return;
				}
			}
			
		} else { //nether
		
			for(var i = 0; i < data.netherworld.length; i++) {
				dx = data.netherworld[i].coords.x - x;
				dy = data.netherworld[i].coords.z - z;
				if ( dx*dx + dy*dy < rangeSqr ) {
					window.open("/node/" + data.netherworld[i].nid + "/edit",'_blank');
					return;
				}
			}
		}

	}
}

$(document).ready(map.init);



function pickRandom(list) {
	var index = Math.floor(Math.random()*list.length);
	return list[index];
}

function pick(list,x,y) {
	var ix = ((x % list[0].length) + list[0].length) % list[0].length;
	var iy = ((y % list.length) + list.length) % list.length;
	if ( ix >= 0 && iy >= 0 ) {
		return list[iy][ix];
	} else {
		return false;
	}
}

function cLoadInt(name,def) {
	var val = getCookie(name);
	if ( !val || val == "null" || val == "" || isNaN(parseInt(val)) ) {
		setCookie(name,def,3000);
		return def;
	} else {
		return parseInt(val);
	}
}


function getCookie(c_name)
{
	var c_value = document.cookie;
	var c_start = c_value.indexOf(" " + c_name + "=");
	if (c_start == -1)
	{
		c_start = c_value.indexOf(c_name + "=");
	}
	if (c_start == -1)
	{
		c_value = null;
	}
	else
	{
		c_start = c_value.indexOf("=", c_start) + 1;
		var c_end = c_value.indexOf(";", c_start);
		if (c_end == -1)
		{
			c_end = c_value.length;
		}
		c_value = unescape(c_value.substring(c_start,c_end));
	}
	return c_value;
}

function setCookie(c_name,value,exdays)
{
	var exdate=new Date();
	exdate.setDate(exdate.getDate() + exdays);
	var c_value=escape(value) + ((exdays==null) ? "" : "; expires="+exdate.toUTCString());
	document.cookie=c_name + "=" + c_value;
}
